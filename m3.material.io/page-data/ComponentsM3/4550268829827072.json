{"component_image_2x1": {"width": 2240, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/b969e52b35a0e33950a3807c38955894dade87db5708fd23ca86c2c7b8eb6b23cdbf4f4ac95ca5242f77254ed68ce12bd43998881951d6840849a7ca9caaee68", "url": "https://lh3.googleusercontent.com/_89hmh7WkRJaLMX4j15_zoNhZ-vFmKGCDLZlJcIDn2VjnyvDOI7oHH2L3xxdXmeAB9WVOfvkwKrHYaiZ_8ZBABx1LDx9pnT9jfrJ4rtYzQD_iXJ2Uao"}, "dark_component_image_2x1": {"width": 2240, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/2e782784505d5f0058c2d181e207dd7229d791688732792cca52e728002697bac2659445a36011b79ca750ac2a5be409c5eac484254db2720290f03549aff2c9", "url": "https://lh3.googleusercontent.com/TYRAXmbWXZeKOUJ7PCbFpsDZBVO9c_qrf_fsxA-DZVBtu0qwWtRnnmVFQWwJbv6hj-Eu1elbukiGG4iA_cz_jw6zu00G0Cc5Ott02dk-pB5JPEuBS5w"}, "component_image_1x1": {}, "metadata": {"keywords": "Material, Material Design, Google Material, Google, Material Design 3, Material 3, Material You, Material Design Components, Material Components, components, chips", "share_image": {"width": 2000, "height": 1000, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/a64dd667f9354b4bc19d0aef4df3b833a50293c1025c215c9145396c5977e5769c6250307995aac8e0d10510a2d1c14d447286cdfe4cb14eefcce45c92ced5ec", "url": "https://lh3.googleusercontent.com/i-qcTUtZCCl5C8g4TwjCN6CU1z0eFdK1o45rRNkDvkeETJ9iw9NGh1ag3yayM_h7AUsIbdUFmjS8TrP-Aa1jkIW6Ic22jc8qGMslgGcQ3RD9SQ-KxQ"}, "share_description": "Chips help people enter information, make selections, filter content, or trigger actions. Chips can show multiple interactive elements together in the same area, such as a list of selectable movie times, or a series of email contacts.", "share_title": "Chips \u2013 Material Design 3"}, "jetpack": {}, "dark_component_image_3x1": {"width": 3360, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/9880eab8f346f14f6c39d66c9bfa814e53db14f481d916b8198660ebf52f89e8d7cc94f626ef8a7c6ac9f915f65497c112091c44cc90f180ed8ebcd6c8d7e1b9", "url": "https://lh3.googleusercontent.com/cj43de0RXo2eJ7HDwRX0jvI-BXbI_xqucGZ_sbqTBw_bwFa74P_P124GWM-iM5tZNQ7VG8VByTcCnC8aCP_6lQjAQ07y0sVyQNN6nACadW85p3xJ-Q"}, "document_id": "4550268829827072", "dark_component_image_3x2": {"width": 1680, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/933d33649a1024afd44a7e5b86b6f7564f1445b3dd0e3105c95cf867e36b9f4044065f1531511aa7edf21b517a4047b84af34242214c8189c2f665ae8f6faddd", "url": "https://lh3.googleusercontent.com/kyRBsO6f_IOiNtgH8pFfBx0KRz41FzraL03btWf4AbInI5e0DyycgJ0DuWYkDEWLkioLkaZ0WtEJb6-x5axOXP7A1HVlb5PJdjc2qtdrR2pceTRboUE"}, "mdc_flutter": {"meta": {"keywords": null, "share_image": {}, "share_description": null, "share_title": null}, "banners": [{"title": "Flutter support in progress", "links": [], "description": "<p>The Flutter team is currently working on Material Design 3 support for <code><a href=\"https://api.flutter.dev/flutter/material/Chip-class.html\" target=\"_blank\" rel=\"noopener\">Chip</a></code>. Follow the <a href=\"https://github.com/flutter/flutter/issues/91605\" target=\"_blank\" rel=\"noopener\">GitHub issue</a> and <a href=\"https://twitter.com/FlutterDev\" target=\"_blank\" rel=\"noopener\">@FlutterDev</a> for additional updates.</p>"}], "hide_generic_not_available_message": true, "hide_intro_block": true, "document_id": "4523595036098560", "markdown_content": null, "title": "Chips", "image": [], "up_next_section": {"items": []}, "is_beta": false, "markdown_path": null}, "component_image_3x1": {"width": 3360, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/7d7affb1d5b05805cbe0905189596eb54e101cf797d60850adb2158917379e9515f658a6d79083f783e790c911756183c0cda35e52e83dd1a6a4c11341e932d7", "url": "https://lh3.googleusercontent.com/ga4_mVfzULYiSenIHlK7dEyy6EegFhN357rWYxgZbhy_wo2Ip03GcYfm5hFbqHhhlYlE4D_aZ5JkogBJhLaIIKllZmqM1_H_UrsxLsyCFtjimeNYGGM1"}, "component_image_position": "top center", "component_image_3x2": {"width": 1680, "height": 1120, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/ad861046451c6d945409f2e644fb19420895a0453ef1098b19c90d5d87d68a735b1ca579051b578ceb5f5523155bf7b92f26e3afefa181eb1e5718fd6edd1fab", "url": "https://lh3.googleusercontent.com/dPojmcqwLaEM-zPCPAji4JGSIrPuDRPb1BEdFmqN-AsHHgr-b4E6X6tLTxMMbQcE8xlXK0BuJ0TtdTjywR-n5ru-fXYjsGH_-k2yERX-Ti7GPRBA1Q"}, "page_hero": {"foreground_image_2x1": {"width": 4000, "height": 2000, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/1a9c98ebbbc651e7b14b84471899c7a43d9e0876880b7649371a65a86497063c16d27a63be35f2dbcc84fb744152d71be9fae9010786f4e121e763beeac180f4", "url": "https://lh3.googleusercontent.com/KEW_CA4MM8tARar22P_forvR2xOl497pP-zBOfR2GnIljm6DGaZmlDKdC6AmNtFxvk8XonVvGMzf6yPzKSJfOyrsBpu_9hY7wX7yKnYbm0aqf9ZrnfY8"}, "foreground_image_1x1": {"width": 2240, "height": 2240, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/56f3904d80f6966484508239ce831813a04c57d8a5fb75e1d7a14db8338f8334a56cb83921d596e9ee89a58a78b304f1c2e58ce9f5a7623ccfef3b6246d19c9f", "url": "https://lh3.googleusercontent.com/pbpNaoCO0NhMy4z-pnJ7h6pJzjBZj5-vDCQFtkaS4ywbHct-7q0NNH1LvRfPw91OkgobIUBEuduGx9eLPgHE0a6lNuqDDDh3ljdEZaMPI5BxKq-qdYU"}, "full_width_content_centered": false, "foreground_image_1x1_dark_mode": {"width": 2240, "height": 2240, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/97d928c9542ef07c3420bae25a0fde270604640fc681d63d2eff270ac82f86b598093ddb2563a7002b386bb7709658a66fdc8302f5683b5fa8a076435f55432d", "url": "https://lh3.googleusercontent.com/91hmkuiD3JsgVNOw2_iOu2_Kp9v1A5J4wb1vJ0SsxSLgraRUKepfbcKfk1SoZL3RkO1syLigirNsxqIEXvaVLOOKdmVtjdslrr5kHDKqajpQFQkNECw"}, "main_background_image": {}, "foreground_image_2x1_dark_mode": {"width": 4000, "height": 2000, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/dda37536ef1eaed65ccd4f0bba1d6a98847ea90be32fcbffbbec4c678387fbd9fe50e404265d40d83687d731034bc92f0d84a5adba1c2331b6a145fad359cdda", "url": "https://lh3.googleusercontent.com/H_a3IbUfIKfuZ-oudM9iR074Y7uIQ8F343c-CASwad4aR6FWJYLw0Wki9PE9Birpp6RwJoUbG8tbfK1rwFJI1I8Fdzk6aOrBI8WlCdoAOz3sLWNlEQ"}, "horizontal_foreground_alignment_override": null, "full_width": false, "main_background_image_dark_mode": {}, "vertical_foreground_alignment_override": "position_bottom", "split_background_image": {"width": 6927, "height": 6927, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/7ef9a5991208e6273897e95ef10b1a0b8fcfd6acf530aa5a6ebd6860ce871e3cf63a598fa702ce7858f87db5e1110344de805e2aee429d6a2a9240fd2723e9cf", "url": "https://lh3.googleusercontent.com/78Szp52Kes5kGUqLMi87p7C-qw5FAHKNNQGG3GvFfCUljb6UfeTuEJnZe9Eq7Mh_sgbjdYOXVqSst_n-a6CG7ihchqtgHY0kNjcTObO98ZrA910TVIw"}, "split_background_image_dark_mode": {"width": 6927, "height": 6927, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/35b4af5cba7acb8f1a9a6d6ab4e840cc62405ea57d6aa78368b543061ef56851eab1cfaa338ca5e98172e83348d7be691de7a0ecd269678ec2ab89ef70122683", "url": "https://lh3.googleusercontent.com/ay-dle0TfOkzz9eXr9b_esO3THt8eBmLdqc-QDdi1fZJceSKOA7bQZBJAh_wa9R-8bLjlYMvM_oOwNkgTcYP4KWoCNJyacdPZxxOl9bRVJyTVMK4ToA"}}, "ia_title": "Components / Chips", "title": "Chips", "dark_component_image_1x1": {}, "mdc_web": {}, "mdc_android": {"meta": {"keywords": null, "share_image": null, "share_description": null, "share_title": null}, "banners": [{"title": "Jetpack Compose support in progress", "links": [], "description": "<p>The Compose Material library is currently in alpha, with not all components ready at this time. The Jetpack Compose team is actively working on support for this component. Visit the <code>androidx.compose.material3</code>&nbsp;<a href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3\">library documentation on Android Developers</a> for updates and to browse available components.</p>"}], "hide_generic_not_available_message": true, "hide_intro_block": true, "document_id": "4662259363872768", "markdown_content": "<!--docs:\ntitle: \"Material chips\"\nlayout: detail\nsection: components\nexcerpt: \"Chips are compact elements that represent an input, attribute, or action.\"\niconId: chip\npath: /catalog/chips/\n-->\n\n# Chips\n\n[Chips](https://material.io/components/chips) are compact elements that\nrepresent an input, attribute, or action.\n\n<mio-image index=0></mio-image>\n\n**Contents**\n\n*   [Using chips](#using-chips)\n*   [Assist chip](#assist-chip)\n*   [Filter chip](#filter-chip)\n*   [Input chip](#input-chip)\n*   [Suggestion chip](#suggestion-chip)\n*   [Theming chips](#theming-chips)\n\n## Using chips\n\nBefore you can use Material chips, you need to add a dependency to the Material\nComponents for Android library. For more information, go to the\n[Getting started](/libraries/mdc-android/getting-started)\npage.\n\nChips allow users to enter information, make selections, filter content, or\ntrigger actions. While buttons are expected to appear consistently and with\nfamiliar calls to action, chips should appear dynamically as a group of multiple\ninteractive elements.\n\n### Usage\n\nA `Chip` can be added in a layout with the following:\n\n```xml\n<com.google.android.material.chip.Chip\n    android:id=\"@+id/chip\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/text\"/>\n```\n\nChanges to a chip can be observed with the following:\n\n```kt\nchip.setOnClickListener {\n   // Responds to chip click\n}\n\nchip.setOnCloseIconClickListener {\n    // Responds to chip's close icon click if one is present\n}\n\nchip.setOnCheckedChangeListener { chip, isChecked ->\n    // Responds to chip checked/unchecked\n}\n```\n\n### Making chips accessible\n\nChips support content labeling for accessibility and are readable by most screen\nreaders, such as TalkBack. Text rendered in chips is automatically provided to\naccessibility services. Additional content labels are usually unnecessary.\n\n#### Touch target\n\nThe `Widget.Material3.Chip.*` styles use an\n[InsetDrawable](https://developer.android.com/reference/android/graphics/drawable/InsetDrawable)\nto extend the chip's touch target when necessary to meet Android's recommended\n[accessibility touch target size](https://support.google.com/accessibility/android/answer/7101858).\nDevelopers can override a chip's minimum touch target size using\n`app:chipMinTouchTargetSize`. Developers can set whether the chip should extend\nits bounds to meet the minimum touch target using `app:ensureMinTouchTargetSize`\n(true by default).\n\n#### RTL-friendly chip layout\n\nCall `setLayoutDirection(int)` with `View.LAYOUT_DIRECTION_LOCALE` to ensure\nthat the chip's ancestor `TextView` renders the text with proper paddings.\nWithout this, the initial rendering may look like the text has its padding set\naccording to LTR direction.\n\n```kt\nchip.layoutDirection = View.LAYOUT_DIRECTION_LOCALE\n```\n\n### Grouping chips with `ChipGroup`\n\nChips are most commonly used in groups. We recommend using `ChipGroup` because\nit is purpose-built to handle multi-chip layouts and behavior patterns, as\nopposed to a `ViewGroup` such as `RecyclerView`. A `ChipGroup` contains a set of\n`Chip`s and manages their layout and multiple-exclusion scope, similarly to a\n`RadioGroup`.\n\n#### Layout Mode\n\nA `ChipGroup` rearranges chips across multiple rows by default.\n\n<mio-image index=1></mio-image>\n\n```xml\n<com.google.android.material.chip.ChipGroup\n    android:id=\"@+id/chipGroup\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n  <!-- Chips can be declared here, or added dynamically. -->\n\n</com.google.android.material.chip.ChipGroup>\n```\n\nA `ChipGroup` can also constrain its chips to a single row using the\n`app:singleLine` attribute. Using a single row may necessitate wrapping the\n`ChipGroup` with a `HorizontalScrollView`.\n\n<mio-image index=2></mio-image>\n\n```xml\n<HorizontalScrollView\n    ... >\n  <com.google.android.material.chip.ChipGroup\n      ...\n      app:singleLine=\"true\">\n\n    <!-- Chips can be declared here, or added dynamically. -->\n\n  </com.google.android.material.chip.ChipGroup>\n</HorizontalScrollView>\n```\n\n#### Chip spacing\n\nA `ChipGroup` can insert spacing between chips in a row or between rows of chips\nusing the `app:chipSpacing` attribute. Different horizontal and vertical spacing\ncan be set using the `app:chipSpacingHorizontal` and `app:chipSpacingVertical`\nattributes.\n\n**Note:** The `app:chipMinTouchTargetSize` will overrule vertical chip spacing\nfor lower amounts.\n\nThe following image shows a group of chips with\n`app:chipSpacingHorizontal=\"42dp\"`.\n\n<mio-image index=3></mio-image>\n\n#### Multiple exclusion scope\n\nThe `app:singleSelection` attribute can be set to true on a `ChipGroup` in order\nto toggle single-select and multi-select behaviors of child chips.\n\nThe `app:selectionRequired` attribute can be set to true on a `ChipGroup` to\nprevent all child chips from being deselected - at least one option should be\nchosen.\n\n#### Handling checked chips\n\nChanges to child chip's checked/unchecked state can be observed with the\nfollowing:\n\n```kt\nval checkedChipId = chipGroup.checkedChipId // Returns View.NO_ID if singleSelection = false\nval checkedChipIds = chipGroup.checkedChipIds // Returns a list of the selected chips' IDs, if any\n\nchipGroup.setOnCheckedChangeListener { group, checkedId ->\n    // Responds to child chip checked/unchecked\n}\n```\n\n### Standalone `ChipDrawable`\n\nA standalone `ChipDrawable` can be used in contexts that require a `Drawable`.\nThe most obvious use case is in text fields that \"chipify\" contacts, commonly\nfound in communications apps.\n\nTo use a `ChipDrawable`, first create a chip resource in `res/xml`. Note that\nyou must use the `<chip` tag in your resource file.\n\nIn `res/xml/standalone_chip.xml`:\n\n```xml\n<chip\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    app:chipIcon=\"@drawable/ic_chip\"\n    android:text=\"@string/text\"/>\n```\n\nInput Chip is the default Material style for standalone `ChipDrawable`s, but you\ncan apply any of the other styles using the `style` attribute. All the\nattributes on `Chip` can be applied to a `ChipDrawable` resource.\n\nA ChipDrawable can then be inflated from this resource with the following:\n\n```xml\nval chipDrawable = ChipDrawable.createFromResource(context, R.xml.chip)\n```\n\nFor example, consider an editable e-mail address field that converts addresses\nto chips as they are typed and validated. We can combine `ChipDrawable` with\nspans to add a chip to an `EditText`:\n\n<mio-image index=4></mio-image>\n\n```kt\nchip.setBounds(0, 0, chip.intrinsicWidth, chip.intrinsicHeight)\nval span = ImageSpan(chip)\nval text = editText.text!!\ntext.setSpan(span, 0, text.length, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)\n```\n\n### Types\n\nThere are four types of chips: 1\\. [assist](#assist-chip), 2\\.\n[filter](#filter-chip), 3\\. [input](#input-chip),\n4\\.[suggestion](#suggestion-chip)\n\n<mio-image index=5></mio-image>\n\nAPI and source code:\n\n*   `Chip`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/Chip)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/Chip.java)\n*   `ChipGroup`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/ChipGroup)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/ChipGroup.java)\n*   `ChipDrawable`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/ChipDrawable)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/ChipDrawable.java)\n\n## Assist chip\n\nAssist chips represent smart or automated actions that can span multiple apps,\nsuch as opening a calendar event from the home screen. Assist chips function as\nthough the user asked an assistant to complete the action.\n\n### Assist chip example\n\nThe following example shows an activated assist chip.\n\n<mio-image index=6></mio-image>\n\nIn the layout:\n\n```xml\n<TextView\n  android:id=\"@+id/textView_1\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\"\n  android:text=\"@string/label_1\"\n  android:textAlignment=\"viewEnd\"/>\n\n<com.google.android.material.chip.Chip\n  android:id=\"@+id/chip_1\"\n  style=\"@style/Widget.Material3.Chip.Assist\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\"\n  android:text=\"@string/chip_text_1\"\n  app:chipIcon=\"@drawable/circle_1\"\n  app:ensureMinTouchTargetSize=\"true\"/>\n```\n\n## Filter chip\n\nFilter chips use tags or descriptive words to filter content.\n\nFilter chips clearly delineate and display options in a compact area. They are a\ngood alternative to toggle buttons or checkboxes.\n\n### Filter chip example\n\nThe following example shows filter chips.\n\n<mio-image index=7></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.chip.ChipGroup\n    ...>\n  <com.google.android.material.chip.Chip\n      android:id=\"@+id/chip_1\"\n      style=\"@style/Widget.Material3.Chip.Filter\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:checked=\"true\"\n      android:text=\"@string/text_filter_1\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n       style=\"@style/Widget.Material3.Chip.Filter\"\n       android:text=\"@string/text_filter_2\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Filter\"\n      android:checked=\"true\"\n      android:text=\"@string/text_filter_3\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Filter\"\n      android:text=\"@string/text_filter_4\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Filter\"\n      android:text=\"@string/text_filter_5\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Filter\"\n      android:text=\"@string/text_filter_6\"/>\n\n</com.google.android.material.chip.ChipGroup>\n```\n\n## Input chip\n\nInput chips represent a discrete piece of information in compact form, such as\nan entity (person, place, or thing) or text. They enable user input and verify\nthat input by converting text into chips.\n\n### Input chip example\n\nThe following example shows input chips.\n\n<mio-image index=8></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.chip.ChipGroup\n    ...>\n  <com.google.android.material.chip.Chip\n      android:id=\"@+id/chip_1\"\n      style=\"@style/Widget.Material3.Chip.Input\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:text=\"@string/text_input_1\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Input\"\n      android:text=\"@string/text_input_2\"/>\n\n  <com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.Material3.Chip.Input\"\n      android:text=\"@string/text_input_3\"/>\n\n</com.google.android.material.chip.ChipGroup>\n```\n\n## Suggestion chip\n\nSuggestion chips help narrow a user\u2019s intent by presenting dynamically generated\nsuggestions, such as offering possible responses or providing search filters.\n\n### Suggestion chip example\n\nThe following example shows suggestion chips.\n\n<mio-image index=9></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.chip.ChipGroup\n    ...>\n   <com.google.android.material.chip.Chip\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    style=\"@style/Widget.Material3.Chip.Suggestion\"\n    android:text=\"@string/chip_text_1\"/>\n  <com.google.android.material.chip.Chip\n    ...\n    style=\"@style/Widget.Material3.Chip.Suggestion\"\n    android:text=\"@string/chip_text_2\"/>\n  <com.google.android.material.chip.Chip\n    ...\n    style=\"@style/Widget.Material3.Chip.Suggestion.Elevated\"\n    android:text=\"@string/chip_text_3\"/>\n\n</com.google.android.material.chip.ChipGroup>\n```\n\n### Anatomy and key properties\n\nThe following is an anatomy diagram of a chip:\n\n<mio-image index=10></mio-image>\n\n1.  Container\n1.  Text\n1.  Remove icon (optional)\n1.  Thumbnail (optional)\n\n#### Container attributes\n\nElement              | Attribute                                                       | Related method(s)                                                                                          | Default value\n-------------------- | --------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------- | -------------\n**Color**            | `app:chipBackgroundColor`                                       | `setChipBackgroundColor`<br/>`setChipBackgroundColorResource`<br/>`getChipBackgroundColor`                 | `?attr/colorOnSurface`\n**Ripple color**     | `app:rippleColor`                                               | `setRippleColor`<br/>`setRippleColorResource`<br/>`getRippleColor`                                         | `?attr/colorOnSecondaryContainer` at 12%\n**Stroke width**     | `app:chipStrokeWidth`                                           | `setStrokeWidth`<br/>`setChipStrokeWidthResource`<br/>`getChipStrokeWidth`                                 | `1dp`\n**Stroke color**     | `app:chipStrokeColor`                                           | `setStrokeColor`<br/>`setChipStrokeColorResource`<br/>`getChipStrokeColor`                                 | `?attr/colorOnSurface`\n**Min height**       | `app:chipMinHeight`                                             | `setChipMinHeight`<br/>`setChipMinHeightResource`<br/>`getChipMinHeight`                                   | `32dp`\n**Padding**          | `app:chipStartPadding`<br/>`app:chipEndPadding`                 | `setChip*Padding`<br/>`setChip*PaddingResource`<br/>`getChip*Padding`                                      | `4dp` (start)<br/>`6dp` (end)\n**Shape**            | `app:shapeAppearance`<br/>`shapeAppearanceOverlay`              | `setShapeAppearanceModel`<br/>`getShapeAppearanceModel`                                                    | `?attr/shapeAppearanceSmallComponent` with 8dp `cornerSize`\n**Min touch target** | `app:chipMinTouchTargetSize`<br/>`app:ensureMinTouchTargetSize` | `ensureAccessibleTouchTarget`<br/>`setEnsureAccessibleTouchTarget`<br/>`shouldEnsureAccessibleTouchTarget` | `48dp`<br/>`true`\n**Checkable**        | `android:checkable`                                             | `setCheckable`<br/>`setCheckableResource`<br/>`isCheckable`                                                | `true` (input, suggestion, filter)\n\n#### Thumbnail attributes\n\n**Chip icon**\n\nElement        | Attribute                                       | Related method(s)                                                     | Default value\n-------------- | ----------------------------------------------- | --------------------------------------------------------------------- | -------------\n**Icon**       | `app:chipIcon`                                  | `setChipIconVisible`<br/>`isChipIconVisible`                          | `null`\n**Visibility** | `app:chipIconVisible`                           | `setChipIcon`<br/>`setChipIconResource`<br/>`getChipIcon`             | `true` (input and assist)\n**Color**      | `app:chipIconTint`                              | `setChipIconTint`<br/>`setChipIconTintResource`<br/>`getChipIconTint` | `null`\n**Size**       | `app:chipIconSize`                              | `setChipIconSize`<br/>`setChipIconSizeResource`<br/>`getChipIconSize` | `18dp`\n**Padding**    | `app:iconStartPadding`<br/>`app:iconEndPadding` | `setIcon*Padding`<br/>`setIcon*PaddingResource`<br/>`getIcon*Padding` | `0dp`, `-2dp` (filter end padding)\n\n**Checked icon**\n\nIf visible, the checked icon overlays the chip icon.\n\nElement        | Attribute                | Related method(s)                                                              | Default value\n-------------- | ------------------------ | ------------------------------------------------------------------------------ | -------------\n**Icon**       | `app:checkedIcon`        | `setCheckedIconVisible`<br/>`isCheckedIconVisible`                             | `@drawable/ic_m3_chip_checked_circle`\n**Visibility** | `app:checkedIconVisible` | `setCheckedIcon`<br/>`setCheckedIconResource`<br/>`getCheckedIcon`             | `true` (input, filter)\n**Color**      | `app:checkedIconTint`    | `setCheckedIconTint`<br/>`setCheckedIconTintResource`<br/>`getCheckedIconTint` | `null`\n\n#### Text attributes\n\nElement        | Attribute                                       | Related method(s)                                                           | Default value\n-------------- | ----------------------------------------------- | --------------------------------------------------------------------------- | -------------\n**Text label** | `android:text`                                  | `setChipText`<br/>`setChipTextResource`<br/>`getChipText`                   | `null`\n**Color**      | `android:textColor`                             | `setTextColor`<br/>`getTextColors`                                          | `?attr/colorOnSurfaceVariant`\n**Typography** | `android:textAppearance`                        | `setTextAppearance`<br/>`setTextAppearanceResource`<br/>`getTextAppearance` | `?attr/textAppearanceLabelLarge`\n**Padding**    | `app:textStartPadding`<br/>`app:textEndPadding` | `setText*Padding`<br/>`setText*PaddingResource`<br/>`getText*Padding`       | `8dp` (start)<br/>`6dp` (end)\n\n#### Remove (close) icon attributes\n\nElement                 | Attribute                                                 | Related method(s)                                                                    | Default value\n----------------------- | --------------------------------------------------------- | ------------------------------------------------------------------------------------ | -------------\n**Icon**                | `app:closeIcon`                                           | `setCloseIcon`<br/>`setCloseIconResource`<br/>`getCloseIcon`                         | `@drawable/ic_mtrl_chip_close_circle`\n**Visibility**          | `app:closeIconVisible`                                    | `setCloseIconVisible`<br/>`isCloseIconVisible`                                       | `true` for input\n**Color**               | `app:closeIconTint`                                       | `setCloseIconTint`<br/>`setCloseIconTintResource`<br/>`getCloseIconTint`             | `?attr/colorOnSurfaceVariant`\n**Size**                | `app:closeIconSize`                                       | `setCloseIconSize`<br/>`setCloseIconSizeResource`<br/>`getCloseIconSize`             | `18dp`\n**Padding**             | `app:closeIconStartPadding`<br/>`app:closeIconEndPadding` | `setCloseIcon*Padding`<br/>`setCloseIcon*PaddingResource`<br/>`getCloseIcon*Padding` | `4dp` input end padding\n**Content description** | N/A                                                       | `setCloseIconContentDescription`<br/>`getCloseIconContentDescription`                | `@string/mtrl_chip_close_icon_content_description`\n\n#### `ChipGroup` attributes\n\nElement       | Attribute                                                                   | Related method(s)                                             | Default value\n------------- | --------------------------------------------------------------------------- | ------------------------------------------------------------- | -------------\n**Layout**    | `app:singleLine`                                                            | `setSingleLine`<br/>`isSingleLine`                            | `false`\n**Selection** | `app:singleSelection`<br/>`app:selectionRequired`                           | `setSingleSelection*`<br/>`isSingleSelection*`                | `false`<br/>`false`\n**Spacing**   | `app:chipSpacing`<br/>`app:chipSpacingHorizontal`<br/>`chipSpacingVertical` | `setSpacing*`<br/>`setChipSpacing*Resource`<br/>`getSpacing*` | `8dp`\n\n#### Styles\n\nElement                         | Style\n------------------------------- | ----------------------------------\n**Default style (assist chip)** | `Widget.Material3.Chip.Assist`\n**Input chip**                  | `Widget.Material3.Chip.Input`\n**Suggestion chip**             | `Widget.Material3.Chip.Suggestion`\n**Filter chip**                 | `Widget.Material3.Chip.Filter`\n**`ChipGroup` style**           | `Widget.Material3.ChipGroup`\n\n#### Theme attributes\n\nElement            | Theme attribute             | Default style\n------------------ | --------------------------- | -------------\n**`Chip`**         | `?attr/chipStyle`           | `Widget.Material3.Chip.Assist`\n**`ChipGroup`**    | `?attr/chipGroupStyle`      | `Widget.Material3.ChipGroup`\n**`ChipDrawable`** | `?attr/chipStandaloneStyle` | `Widget.Material3.Chip.Input`\n\nSee the full list of\n[styles](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/res/values/styles.xml)\nand\n[attributes](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/res/values/attrs.xml).\n\n## Theming chips\n\nChips support [Material Theming](https://material.io/components/chips/#theming),\nwhich customizes color, typography and shape.\n\n### Chip theming example\n\nAPI and source code:\n\n*   `Chip`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/Chip)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/Chip.java)\n*   `ChipGroup`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/ChipGroup)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/ChipGroup.java)\n*   `ChipDrawable`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/chip/ChipDrawable)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/chip/ChipDrawable.java)\n\nThe following example shows chips with Material Theming.\n\n<mio-image index=11></mio-image>\n\n#### Implementing chip theming\n\nUse theme attributes and styles in `res/values/styles.xml`, which applies the\ntheme to all chips and affects other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"colorOnSurface\">@color/shrine_pink_100</item>\n    <item name=\"textAppearanceBodyMedium\">@style/TextAppearance.App.BodyMedium</item>\n    <item name=\"shapeAppearanceSmallComponent\">@style/ShapeAppearance.App.SmallComponent</item>\n    <item name=\"chipStyle\">@style/Widget.App.Chip</item>\n</style>\n\n<style name=\"Widget.App.Chip\" parent=\"Widget.Material3.Chip.Input\">\n    <item name=\"chipIconTint\">@color/shrine_pink_900</item>\n    <item name=\"chipBackgroundColor\">@color/white</item>\n    <item name=\"chipStrokeWidth\">2dp</item>\n    <item name=\"chipStrokeColor\">@color/stroke_tint</item>\n    <item name=\"checkedIconVisible\">false</item>\n    <item name=\"shapeAppearanceOverlay\">@null</item>\n</style>\n\n<style name=\"TextAppearance.App.BodyMedium\" parent=\"TextAppearance.Material3.BodyMedium\">\n    <item name=\"fontFamily\">@font/rubik_regular</item>\n    <item name=\"android:fontFamily\">@font/rubik_regular</item>\n</style>\n\n<style name=\"ShapeAppearance.App.SmallComponent\" parent=\"ShapeAppearance.Material3.SmallComponent\">\n    <item name=\"cornerFamily\">cut</item>\n    <item name=\"cornerSize\">4dp</item>\n</style>\n```\n\nin `color/stroke_tint.xml`:\n\n```xml\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n  <item android:color=\"?attr/colorOnSurface\" android:state_checked=\"true\"/>\n  <item android:color=\"@color/shrine_pink_100\"/>\n</selector>\n```\n\nUse a default style theme attribute, styles and a theme overlay. This applies\nthe theme to all chips but does not affect other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"chipStyle\">@style/Widget.App.Chip</item>\n</style>\n\n<style name=\"Widget.App.Chip\" parent=\"Widget.Material3.Chip.Input\">\n    <item name=\"materialThemeOverlay\">@style/ThemeOverlay.App.Chip</item>\n    <item name=\"android:textAppearance\">@style/TextAppearance.App.BodyMedium</item>\n    <item name=\"shapeAppearance\">@style/ShapeAppearance.App.SmallComponent</item>\n    ...\n</style>\n\n<style name=\"ThemeOverlay.App.Chip\" parent=\"\">\n    <item name=\"colorOnSurface\">@color/shrine_pink_900</item>\n</style>\n```\n\nUse the style in the layout, which affects only specific chips:\n\n```xml\n<com.google.android.material.chip.Chip\n      ...\n      style=\"@style/Widget.App.Chip.\"  />\n```", "title": "Chips", "image": [{"case": null, "a11y_description": "Email with and grey chip with an email address on the \"To\" line", "file": {"width": 1352, "height": 660, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/f4787b884d85b99ff2f1488448866163eb12d24583bd438e94987ef9722ecbddff6c35b0e1679ff551e06fb11039f7a5d22c8a54c92487c8eaa2175328fbe3ff", "url": "https://lh3.googleusercontent.com/BCRP2ByAfZ9JOIas2N_lrmIS1O15-qSU9zEXzAlMZbYE3yJGZPzIdBN4lHwJP8Xkndn-l4bZjwtCMi38Qxgm15EXsgQm834g4J9HJjCQJlIoyWlG14uz"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"6 white \"Filter\" chips spread across 2 lines: \"Filters\" 1 and 3 selected and\nare light purple and include checkmarks.\"", "file": {"width": 637, "height": 221, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/f5a1d06da8ca74bc3c3a93461dd92baaddf5c64adef5afd75d7d5104b44583d799136f745b8782f360c1813fb2b3fedfdb27d1d813d0f46844e72c3a90592526", "url": "https://lh3.googleusercontent.com/teOgEkWby5E5YU2rGetU-QhG4srMrLcVNsqiUxDMQxqeCc66T6ecbEWwp4OuKLejoEA1j3YfdLINXHqWPBjSWBBcm99e3xulRpb5m08bPCQagjjpLQ"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"Single line of white chips: chips 1, 2, and 3 are fully visible, chip 4 is\npartly visible\"", "file": {"width": 666, "height": 99, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/33f0b464217feb015f86a747cc2d71761ce60c453f00a1ae9edcf3b44f96740266de579b63f9ab3c0735dbcc6750068ca0a39d6353c4b00aa7d9aa13749eebca", "url": "https://lh3.googleusercontent.com/O0rgqRCUxe9O2ceK5nopEboWQ1YneafIQzaEzLWLpnWFwUCY8blUKKalHeWUiChDcELG29oJdWayl33j0J6PtL3q0miYn1fsRKqpg0W1Q_tFesYp_Q"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"6 white chips in 2 rows with 42dp horizontal spacing\"", "file": {"width": 571, "height": 213, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/fc1f9cc93efbbd593152401760ccff938237ce8c52e4f67cab20fab467058ac7e44140dbcf051c35e99797dfc27e5b2a48dab6bf5238b3b5e4c433b37c00082e", "url": "https://lh3.googleusercontent.com/WQUBwOoFwSCvbWgXpov1IrOvZ9H2vVHQCaaPkmNUyFWlRGeS15iOFLf_N1SQp9nJsHh5z5aDttU1tJj_phlZzZBJS0W1w9fUAI5ac0pvxUE9tjVrBeM"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"Standalone chip inside a text field\"", "file": {"width": 344, "height": 105, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/e378c6b67e1cfbb2606937c87a1f263ccda4130517fef5ccf74a5e218d67f171e0539a05e888cabb051f7b4160bb7ba90d093a977aca73269d992618cd5eb35c", "url": "https://lh3.googleusercontent.com/ThY3WJMMWXvCiv8QRa6fZn4Sb7iqA8Wupx9XEF5XUcIDuF7XOinQD2rt768_M6sz2a4-dbn_HN_j3KKzp0NLLxOeqB8uy8GLiOvLp6-Lo9groT_ic5XI"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "Examples of the four different chip types", "file": {"width": 1352, "height": 466, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/f71c87a3dcea756849fc90b56686a93adf668d26894b4f421ba3cdf26d656d741a04a55b63d5a45edcb1f52f8aed6dc2b9a6b9f8c97d9d485a3ec94deb06a96d", "url": "https://lh3.googleusercontent.com/1OO5LkxskQqZNGCUBUemEhnWT0seK0XMoft9b3hQX35_lPkR8nWQc5WgXInS8Dju5zAccV_LzkwPOriKlMZyt-SBiHrEAeT8uojUiyl6x_d5hPAelCA"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"A selected action chip with its corresponding action, a visible popup textbox\nstating the chip has been activated.\"", "file": {"width": 2211, "height": 336, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/b0fa9066ed15b235f9d84da4739f37e526b28e4d837323cf4d5d0e86ded18de8941afc8cb8b575a2f112b46c0bff9c24e1892ec82aa532428ff063c59d39950e", "url": "https://lh3.googleusercontent.com/aYPur5b87w-rbl72yKPuXvZtG1QulEehgAY0mf-cMb2iI80p0nrJKRP0RDFu0i2JLjDK63igJJwcDU1Y5REH-XdSnyb-06Hwa8CLp610EERiRRNXgfA"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"6 white \"Filter\" chips spread across 2 lines: \"Filters\" 1 and 3 selected and\nare light purple and include checkmarks.\"", "file": {"width": 637, "height": 221, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/0408e13579b977dd63808d1ba2e0571646bb99af4079189a9adde0a14f20b5d3adcefa0af88a05121b594eb6445eade97da54744c363e02fbf525c3124a4fff3", "url": "https://lh3.googleusercontent.com/z9XDqSTMfC1dR_L1wzpCGytEiOEFum2hS-mMfRWriAcEQloCkVWrCnwMR-q98OkZZjenbEEzMLMFShiOrvTIwPRRBOo4R6LNypKaHWBskRyNoxTzLW5b"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"Input chips with texts Input 1 to 6.\"", "file": {"width": 540, "height": 100, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/1164bde920b57ea16163199eed903cc7a06221d9aabc3ada63aa63e938242f2a3123f2e9b37d4fb28562fb213a19d6bdee0595e00607c9627bb912a054c823ab", "url": "https://lh3.googleusercontent.com/L510hz2s0DySVlTOYzkC1pCEy5Yh4YAp-1KK9EMWqNtt8aliPYWrHo1f9f9OCW8Z0OSmrFDpEF_-2C9oHoIj-N-DCN312II2AlRxHH7G43ta4kcgUA"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"3 suggestion chips, where suggestion 1 is unselected with a solid border and\nwhite background, suggestion 2 is selected with no border and a light purple\nbackground, and suggestion 3 is an unselected elevated suggestion with no border\nand a light grey background.\"", "file": {"width": 810, "height": 134, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/80f4a6c2fd768886740af4e9ac981b6aee87cf89caae23cc6d4734fa7b17204b572f5735d2cb1410509dd3255ef1e60f715f15cba87cbe2792ead43b75a09432", "url": "https://lh3.googleusercontent.com/ID4zTYU36jmxwPrJhX2grb-JSIKOYrx5j5jswRfzCC5jTa10LY8jqfixGbu1q7vXxk4vNYddpFqrT2vP_ZwFgpwePhRfzUrzAOyVOK8e73kaTsBQMg"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "Chip anatomy diagram", "file": {"width": 1004, "height": 600, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/5b172e08c8d5cdf8c7f28b04b32d3724216fb37c80a1d6437b031b99f0b79ace8ef3b438f31b21986fcff81c848a8553f0fb47ed0e46de7bd2fd2dd60c3672d8", "url": "https://lh3.googleusercontent.com/c7MUx2WC3y3LYTo3t7_gAphDjtIJUUe6Nv28OkBLtXiAngDOWBc_yowCueEslmmynhDNYT-oDkbHwqCJVIpPBhu-f93uSqzXC0ZeHoHgabU1QYOqaovr"}, "bordered": true, "caption": null}, {"case": null, "a11y_description": "\"3 chips with brown text and icons, white fill, and pink outlines\"", "file": {"width": 500, "height": 74, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/d071decc10d0a6200c486f89ab78693256cfaaa939cf0b5a8bd505787d59e86b3d157d0fb36e5cb1fee41b26ec6915ee5aac172bc8dfe7844b03416776706f95", "url": "https://lh3.googleusercontent.com/DKA4Pw82jX4_-F2azX2dp-ful95AMSc550qZQv5BMge85cnSwdo8mu8eKjw4gRSNRKKDu07C0Vp4ETjewV9Dul-uJD4z4fYX37sT8a3sDhxrhmeqCDo"}, "bordered": true, "caption": null}], "up_next_section": {"items": []}, "is_beta": false, "markdown_path": "docs/components/Chip.md"}, "description": "Chips help people enter information, make selections, filter content, or trigger actions. Chips can show multiple interactive elements together in the same area, such as a list of selectable movie times, or a series of email contacts.", "hero": {"foreground_image": {"width": 856, "height": 1816, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/7656933a3cf124b6ff1163fd7b48da900a8063e6b0b60d2d955b55c8ed7baea2aaa34318410a07c98ebc36ce46741bcd2458ad9ca941fa504693d6b0859968f7", "url": "https://lh3.googleusercontent.com/vvRHsXP9AfzIQuhhpoxk7O9k9sjLlwllA9iJy-8Rlh5Bv8lLdM5Drovw6Na4IGiRYhNtqmFqU2AhqM05GTPOoDEnxN4dDuJXmKdvl1jtOKPTL8s0tkw"}, "foreground_text_light": true, "foreground_image_svg": null, "foreground_image_alignment": "top", "background_image": {"width": 1000, "height": 1000, "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/eb6a613026456200bff23d4ea8394088674a6f1fe0ddb79ef0dbaef40ff0a6181b7a923c762e83daca22908697c881b5d90163a442aaf962ad4bd719b3be2960", "url": "https://lh3.googleusercontent.com/OakPYyxP9URFttTBka5Q-BswHT29Y7r_PKT-skqPvtJ1ZUqPkMFpK-cI9WiSYqKTarVpsLz1sjkKbsQQhHXfAudK7WXO5zUcaTP-o_rNvq9-HBGK0DXE"}}, "category": "selection", "isDisplayed": true}