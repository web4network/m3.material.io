{
  "component_image_2x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/c2a5cb029d87d9b7425dad77401762b4426fc973b2a9998b75925eec74788205c9425d92f07c874bab221682f85a485a98ead4e14348f05b823936f5d50dc4a6",
    "url": "/lh3.googleusercontent.com/DegVExvsICQ_j7rOVKQFyvqyPgsoZOrv69MSl9B6Y2Kp3Ihra67S010DTmDVDu-kfLTPQddq2YvSk11U8nrNTD7BaFuw1iuOB5iloHiBE6oKyHyqFXY",
    "width": 2240
  },
  "page_hero": {
    "full_width_content_centered": false,
    "vertical_foreground_alignment_override": null,
    "foreground_image_2x1_dark_mode": {
      "height": 2000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/006b2172aa8fe520fb4722f6c447f403e21e16a98349eb96c62f8c20f73e3499aff8852f739876331dd333aed1f79f80ac6f703983f16a1f524edc69f35a6d79",
      "url": "/lh3.googleusercontent.com/CYm92Hit6q1hYop8MKyeXL4mvAESpt5MfT5Jw-VFA0N2TXRG-07Rj7BWv3B9IjOSsas7u6pFQoZdrO8lmczD8m927BZLi76rSt6rb7b3BsoXvaIKBFY",
      "width": 4000
    },
    "foreground_image_1x1_dark_mode": {
      "height": 2240,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/d1945a45999de7e85d14e4d791e16c34e7e68df790ff6b3b834c03b0c95d3ba748a3fa4659b047b426b13be5ad47aba83a4c3994753eaf54bdc0cf889ad1e891",
      "url": "/lh3.googleusercontent.com/SNiMiEdgJaH8mVNrlHIvWQ4A_nQTMfc44drWDSGaUWhNcr4DTMgD-Ex73SIKIgZ0yqNKtN-EvugWMY1QW5rmn4JAWpkGGSI4xrY9cC0HTSuBWy5HL3s",
      "width": 2240
    },
    "main_background_image": {},
    "full_width": false,
    "foreground_image_1x1": {
      "height": 2240,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/52fd6873db4eab6afa382972c1a47d7490bd1a34a21f7dd7f0742a0592dde9a4c298d73bf3969b10ae89f09dbd6c197ee801620f7fd029462ad39913bc5d3ce4",
      "url": "/lh3.googleusercontent.com/DzMrgbHmlLmyH1jaP8Kslo9DNhKjgPp0QsJUD5OiQoTWlaKwa-gfEvwMr0GUEnl4HyeZlztFO9IdBYKnC2FZNA4s6RBv4m17jdLp9un2Sy4x5ndwuIAX",
      "width": 2240
    },
    "split_background_image": {
      "height": 6368,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/8ad8337ac67d85aa40939d20ba74ed2707c4e0fb3ebf28064f632ff1db787056f7ef08cf0f22987d65deee77cc43d210e2c02f1b6289ab0bc71e2d317858029f",
      "url": "/lh3.googleusercontent.com/ZIbibtHRsEyEDgqhv4tMLhEMHr46sLcVFLI0U9sVXpTiSvAQ48jFP2KS7Qy2G9MQlyh32zI6yzyz0udvAnH6mRyTmPWYe3UUwuMBgxVsn-f5NrlyZ_iE",
      "width": 9552
    },
    "split_background_image_dark_mode": {
      "height": 6368,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/656c9876487b567e4714f3a859a8ad0a3335dc4999b1d413a6f830eafe04cbaea1f0053eea3758ab19375f89309035148b3b7ebbdc6b72fb199ae190f450b780",
      "url": "/lh3.googleusercontent.com/BAZU4WH4WBuYRFojYwgmUAObIB_ZdvucHOvmC0ngeDdzu24vNjYelPJ_8j5F417PSoSoh63gRWTikCPyzELPnIgugDd9OQKZjyo6g4qLOZ8TiGnFn5w",
      "width": 9552
    },
    "foreground_image_2x1": {
      "height": 2000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/98bb42ffd870133390b23e9f77f257498539ae02995e92860f22c95a9e9c47682baceb9a7bd6c27cd8915cb056cb4cf255e4560eeeb6268d79a194045fcb8192",
      "url": "/lh3.googleusercontent.com/QyaUrTcT78S9B69d0Vk6p6gj-Fn1_wIbeuENu9C6etGHpAOYTx2mqfBHFYg9KpiG1Li0KlUwP3jyC5Htrij--wHD5exuMjWaL9he2ko79DWxlqDaeQA",
      "width": 4000
    },
    "main_background_image_dark_mode": {},
    "horizontal_foreground_alignment_override": null
  },
  "mdc_android": {
    "up_next_section": {
      "items": []
    },
    "markdown_path": "docs/components/TextField.md",
    "hide_intro_block": true,
    "title": "Text fields",
    "document_id": "5037239666737152",
    "banners": [
      {
        "links": [
          {
            "aria_label": "Read about implementing Material Design 3 TextField using Jetpack Compose",
            "label": "TextField API reference",
            "open_new_window": true,
            "href": "https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary#textfield"
          }
        ],
        "title": "Jetpack Compose support available",
        "description": "<p><span id=\"docs-internal-guid-e55e8aea-7fff-1495-689d-9c6f1cddb356\"></span></p>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Text fields are available in the Material Design 3 library for Jetpack Compose. For implementation details, visit the </span><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: #e8e8e8; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">androidx.compose.material3</span><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> </span><a style=\"text-decoration: none;\" href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3\" target=\"_blank\" rel=\"noopener\"><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #1155cc; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; -webkit-text-decoration-skip: none; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\">library documentation on Android Developers</span></a><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">:</span></p>"
      }
    ],
    "image": [
      {
        "file": {
          "height": 760,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/6caf2c3acd2f5aa3706cda3bc61d893acaed92ff44ce19a9f84c3851f8d48ab4262adead605e6800247b42f3f8314c75d377c4c3ebf2ca0bb9ebcf93910ccda7",
          "url": "/lh3.googleusercontent.com/APrZwchFk479pNVJjXsWDApixD72cLrV5UfuNqizzDIJvn1sewFz7gjyn8q-zrZfWkPiuJrvzagg-QS6KcRuloqTgdlNdVoDCDVPiBv8lDKNK_1GSQ",
          "width": 1520
        },
        "a11y_description": "\"Text fields on a screen\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 197,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/39eb516412e4e0c65fb98fab99b3561398f37337b1552e978491eac292a3dd0825a24cb59baa2b392e2b3f5ed04fce68159f564992ddac5f02850a7f15bd8379",
          "url": "/lh3.googleusercontent.com/m12AtrxyaTa3evUDFdCacwM9Lt2rn5_yrhWpmLMA2e_oLh-ZRmEPuEXamdSTxIOe2rbcvzM6tWL-ZIfJXRe7Topes9gpsaya5SQFZiJnWig6fCbydQ",
          "width": 1080
        },
        "a11y_description": "\"Text field with a leading icon.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 364,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/cb8d1cb376b5f5249de75325b46f5a6ac5d78c19c495392d16bccd995f514c8bce75c642464fa0618c164127ca344e72374f4b02f5b07856772293af2a96d6dd",
          "url": "/lh3.googleusercontent.com/nwaEbwLYngNUfDnJUo4WaUP_DKmdAXtAcjb13t0LRQJ1-4GC89Mg_Fe9vecn6Y88Q0kF3onv_sJRdPrmOKDb-BA5Xg7Y87MVtDAuzq75nv_lt45-xFv5",
          "width": 1080
        },
        "a11y_description": "\"Text field with a password toggle trailing icon.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 200,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/51106ccc95978ab40534b6a3b11ea696c9df25520185c4ec58a3cb3b145ffc2b6077df537d64d29e058f1f650fa46d2e5d4234aa087402b848be2676f1b90fd1",
          "url": "/lh3.googleusercontent.com/2wAMSr6gCHf018Xr34kSMJrVl0xnwNdtcpUXQWPt5OTR7sxGGi-ZHSrwmlFzRbCbSSPsQvgQImvEOIW9FVPJwKWpU0tB8MLcc0jyJWlayI06VZR1GQ",
          "width": 1080
        },
        "a11y_description": "\"Text field with a clear text trailing icon.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 202,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/f1404a665d711d3da9a35a39efc3a082b9df4a2f628302a788e4a3a09eb5f35e937d2a43e1f22799bab02f1932681f859ec9b41d60d404d718f4b10cbce4ed11",
          "url": "/lh3.googleusercontent.com/zgsC_H0hBu1JjYGvh3M-eQbKA5fGm9erqrpp7eVEW1OBNUimPX_rzsRQ-UeKh4jGe4K3YagROYyL0Bd3TjQmYN8Tf9Owy3dP4N8heWeAJ98q6zSGm6M-",
          "width": 1080
        },
        "a11y_description": "\"Text field with a custom trailing icon.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 806,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/5d89f06f12204a3446dd778fd3ca32282c36804a626523389c0a51f05db462c32884604f51948a4d99a0711d1d4e1437002b4db62d8ef3b145fd4771cc58dac9",
          "url": "/lh3.googleusercontent.com/qJlXuRo0RYbheHacIAfG2Cv5W3DRMDSuhPgUO3T0ZAusn3_ne47DXuXSaGm7g1aTpmGroDvvO1Q0-VcUa2UCdmnc8f5eOWJMVvQnXWzU0N5m03lG3tA",
          "width": 1080
        },
        "a11y_description": "\"Text field with an exposed dropdown menu.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 242,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/9e3ab39ca1df4813d3f6fdbc5c1787d2c638d40a02d1ae6581c67ee6070a5e919c83068d6c37740b4551cd9dfa86364a6b603f4d304f1efd5c8965e92289fb6b",
          "url": "/lh3.googleusercontent.com/eL67fKWFl4FQgf-p9asZXUJCz1nUDB_N5XQ6jUR5Eo1cWeB5MiCRYQkk6QvcQ_37iBXorB70AEbo9TNMObqt-2EXBJrYww8Dqhmj1CqpIHL2iXCh8013",
          "width": 1080
        },
        "a11y_description": "\"Text field with helper text.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 242,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/db43da8a47c6de2cbbce97d35dc729e49fcf554a56edd34f53480e4f4668c249f555283c40298495f1e070c24efd037f8c8c209725206897aa564f5151bf0375",
          "url": "/lh3.googleusercontent.com/8K3R7qymu8X0KQz9VjsD45OL9nLk_TrEBUOfMmLWpCWu_uZrBTssy1kw2wlGse_nkGQ4lsLC_2IOdFHcnCb3ZXPhQmDDx5EYIhXcFi95UWdAeLxabmk",
          "width": 1080
        },
        "a11y_description": "\"Text field with a counter.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 255,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/90b88ca472ae2aea500fa630087a1b98732955593b85fa1a8ce227ae882a695e94d86153d5fdbc15400a3dcc7330ddacd028699f3f919a7396183582c9516026",
          "url": "/lh3.googleusercontent.com/jOlHt6ihCnn5yK0K9nO0EF4sejUipBF31M1JJ5mCQm5zYzZ18Ryhb8MZUxV9FXA-9EvGBEhL8tzaAt-_wlLGdwc3y2FtibetnEGOrFdWxnGfRaBj1RI",
          "width": 1080
        },
        "a11y_description": "\"Text field with an error.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 199,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/bc4f75eff0b4c6b3a229247cc61987bef202ce04ba7b7a5a1d146e3e96055f5ce94cbc07c01147cc6fc2a71526f3bb804966e6814b04afbbb2cec09768a93cb0",
          "url": "/lh3.googleusercontent.com/ewLAynDTEWkv92xD2pnGEBncNWtDoEKfJgPQs1YD3LdOFLSGcEY3eVDaBWDCmViiprugXEeZ165-hCkBDCfT-GHWDVd6LM_tysmpxWTL45URpF-GH5dW",
          "width": 1080
        },
        "a11y_description": "\"Text field with a prefix/suffix.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 760,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/635f1abed9c1863a21e53326a45105f988d7c158b60cb3ea822578189fa4c41c1ac1b7c8d08b5d4bf2314c22ab7a932b86651d65dc866fcb5a14264cc06c3e38",
          "url": "/lh3.googleusercontent.com/UqvFVyQrwmt13IFIysbmQ0s_EVawTUfqM5fkRWGqbGTWoRQTFxp2_vOfjUVlkcplGA3elFh4EOXqatsNQIsv84SN5RRt2pgpR3eLgbvjC1_yItRg8f0",
          "width": 1520
        },
        "a11y_description": "\"Text field types. Fixed: grey back, dark gray indicator turns purple.\nOutlined: clear back, gray outline turns\npurple\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 191,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/85f226e2a005022159a1721903e606a66dc1e4ac691f20ee9f35f3c9bffe2df603037e180b79f3b522aef68abafa5b0a246a28912b816939226384a7a869e9db",
          "url": "/lh3.googleusercontent.com/9Tudqz-DvPldLyOGI9O2R0xoZFZMmZkiUTEIFZ33DofG0r5X3pgskG2EvnupvYA_BVB_41roeP1D2iSAASnpyQ0NLBQhWQnQuyA9IELwPEDxH0R4dnI",
          "width": 1080
        },
        "a11y_description": "Filled text field",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 500,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/8c742e5deab813aee361862b1fee023d1b8e5d75207cf324654dc5db635b0626e73cfcdd023f64e430255c2ca4f26d4548d8f06f627d1a2aba6a82ba26d503d9",
          "url": "/lh3.googleusercontent.com/Nq-EZq-Z-WNWNj0dgpo1l6WQlLYgKpIHspHyWX8v_CUOwAgL2IPqVyAN-NtjsfPmZOhU7rSMH8AjjIZEpNHIt6bR4_Jd1qIIwi8IyNn8kLxACDzQ-0w",
          "width": 1520
        },
        "a11y_description": "Filled text field anatomy",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 198,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/3ff6d8c31c86763da80eb88b3a51998b480604e765a01bd330052ab9356f573a234e109a75b54e588355b79e65b4429b9026df2eeee57b2513beed49c60a52f6",
          "url": "/lh3.googleusercontent.com/zol7XNH7HXkPmjhVtmyHGTZBsWUdQMsKosamXVhEDRhTRJa88ku0B2jrBhcoLrtcnE98SjxClEsUiR-TywKid61pzjTMEE4T26xhmkS2FCGggMAFqa7a",
          "width": 1080
        },
        "a11y_description": "Outlined text field",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 500,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/f3bed34c8b66f1fc5a08714103554ab2f2e4e219b127eeeb5f913c6825a6af8f2cfa60c4f1fb381590b36e84c1dcb296b24f61780c934856e3a1ffaa43a80804",
          "url": "/lh3.googleusercontent.com/OeShxRfOnzJOzhbscYYl_oFp0pMLwVwoUnlscD8ahnGW5EjHNZIFA_TvPdp1Bwnoj-Is7qDTFbnmsF-P5aNv82x3J3FG7nC-VIbW9kW7w1acwMnezA",
          "width": 1520
        },
        "a11y_description": "Outlined text field anatomy",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 259,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/5c3cd18edfc6fd27a85f5ac1b94103fdfe66590d8c46cf1157b86a48028768e08def47fb30af7ac6d90feb5317806bb2316a52b4d2be4c07f5754aa66657fe25",
          "url": "/lh3.googleusercontent.com/yZotdmKDMMrHbtejhgAePPeGBnOxTPs4hQjAv-49QATJSAozvkp2walICO1UPQKmZFn0fvol4rf3n7yoUv-ds7oI-wOR5Z1eK_vNmZ6FcuQmfai2RQfl",
          "width": 518
        },
        "a11y_description": "\"Filled and outlined text field theming with pink and brown colors and cut\ncorners\"",
        "bordered": true,
        "case": null,
        "caption": null
      }
    ],
    "meta": {
      "share_image": null,
      "share_title": null,
      "share_description": null,
      "keywords": null
    },
    "markdown_content": "<!--docs:\ntitle: \"Text Fields\"\nlayout: detail\nsection: components\nexcerpt: \"A text field with an animated floating label and other Material Design features.\"\niconId: text_field\npath: /catalog/text-fields/\n-->\n\n# Text fields\n\n[Text fields](https://material.io/components/text-fields) let users enter and\nedit text.\n\n<mio-image index=0></mio-image>\n\n**Contents**\n\n*   [Using text fields](#using-text-fields)\n*   [Filled text field](#filled-text-field)\n*   [Outlined text field](#outlined-text-field)\n*   [Theming](#theming-text-fields)\n\n## Using text fields\n\nBefore you can use Material text fields, you need to add a dependency to the\nMaterial Components for Android library. For more information, go to the\n[Getting started](/libraries/mdc-android/getting-started)\npage.\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    android:id=\"@+id/textField\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"@string/label\">\n\n    <com.google.android.material.textfield.TextInputEditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n**Note:** A text field is composed of a `TextInputLayout` and a\n`TextInputEditText` as a direct child. Using an `EditText` as the child might\nwork, but `TextInputEditText` provides accessibility support for the text field\nand allows `TextInputLayout` greater control over the visual aspects of the\ninput text. If an `EditText` is being used, make sure to set its\n`android:background` to `@null` so that `TextInputLayout` can set the proper\nbackground on it.\n\n### Making text fields accessible\n\nAndroid's text field component APIs support both label text and helper text,\nwhich explain what is requested for a text field. While optional, their use is\nstrongly encouraged.\n\n#### Content description\n\nWhen using **custom icons**, you should set a content description on them so\nthat screen readers, like TalkBack, are able to announce their purpose or\naction.\n\nFor the leading icon, that can be achieved via the\n`app:startIconContentDescription` attribute or `setStartIconContentDescription`\nmethod. For the trailing icon, that can be achieved via the\n`app:endIconContentDescription` attribute or `setEndIconContentDescription`\nmethod.\n\nWhen setting an **error message** that contains special characters that screen\nreaders or other accessibility systems are not able to read, you should set a\ncontent description via the `app:errorContentDescription` attribute or\n`setErrorContentDescription` method. That way the error will announce the\ncontent description instead of the error message.\n\n**Note:** Icons that don't have click listeners set on them work as decorative\nelements, and are therefore skipped by screen readers.\n\n#### Custom `EditText`\n\nIf you are using a custom `EditText` as `TextInputLayout`'s child and your text\nfield requires different accessibility support than the one offered by\n`TextInputLayout`, you can set a `TextInputLayout.AccessibilityDelegate` via the\n`setTextInputAccessibilityDelegate` method. This method should be used in place\nof providing an `AccessibilityDelegate` directly on the `EditText`.\n\n### Adding a leading icon to a text field\n\n<mio-image index=1></mio-image>\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:startIconDrawable=\"@drawable/ic_search_24dp\"\n    app:startIconContentDescription=\"@string/content_description_start_icon\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n### Adding a trailing icon to a text field\n\n**Password toggle:**\n\n<mio-image index=2></mio-image>\n\nWhen the `TextInputEditText` is set to display a password, an icon can be added\nto toggle between masking the password or displaying the password as plain-text.\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:endIconMode=\"password_toggle\">\n\n    <com.google.android.material.textfield.TextInputEditText\n        ...\n        android:inputType=\"textPassword\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n**Clear text:**\n\n<mio-image index=3></mio-image>\n\nAn icon can be set to display when text is present. The icon can be pressed to\nclear the input text.\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:endIconMode=\"clear_text\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n**Custom icon:**\n\n<mio-image index=4></mio-image>\n\nIt is possible to set a custom `Drawable` as the text field's trailing icon via\n`app:endIconMode=\"custom\"`. You should specify a drawable and content\ndescription for the icon, and you have the option to specify custom behaviors.\n\nIn the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:endIconMode=\"custom\"\n    app:endIconDrawable=\"@drawable/ic_accelerator_24dp\"\n    app:endIconContentDescription=\"@string/content_description_end_icon\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\nOptionally, in code:\n\n```kt\ntextField.setEndIconOnClickListener {\n  // Respond to end icon presses\n}\n\ntextField.addOnEditTextAttachedListener {\n  // If any specific changes should be done when the edit text is attached (and\n  // thus when the trailing icon is added to it), set an\n  // OnEditTextAttachedListener.\n\n  // Example: The clear text icon's visibility behavior depends on whether the\n  // EditText has input present. Therefore, an OnEditTextAttachedListener is set\n  // so things like editText.getText() can be called.\n}\n\ntextField.addOnEndIconChangedListener {\n  // If any specific changes should be done if/when the endIconMode gets\n  // changed, set an OnEndIconChangedListener.\n\n  // Example: If the password toggle icon is set and a different EndIconMode\n  // gets set, the TextInputLayout has to make sure that the edit text's\n  // TransformationMethod is still PasswordTransformationMethod. Because of\n  // that, an OnEndIconChangedListener is used.\n}\n```\n\n**Note:** You should opt to use the `EndIconMode` API instead of setting an\nend/right compound `Drawable` on the `TextInputEditText`. The same applies to\nthe now-deprecated `passwordToggle*` attributes.\n\n**Important:** Calling `setEndIconMode` will initialize the icon with its\ndefault features, such as default drawables, and in the case of the custom mode,\nan empty drawable. You can add customizations after calling `setEndIconMode`.\nThe exception for this is if a drawable was specified in XML via the\n`app:endIconDrawable` attribute. An end icon drawable set in XML will take\nprecedence and override an existing default icon.\n\nSee the full list of\n[end icon modes](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/values/attrs.xml#L149).\n\n### Implementing an exposed dropdown menu\n\n<mio-image index=5></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    style=\"@style/Widget.Material3.TextInputLayout.*.ExposedDropdownMenu\">\n\n    <AutoCompleteTextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"none\"\n        app:simpleItems=\"@array/simple_items\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\nThe string array specified by `app:simpleItems` will be used as the default\nitem strings for auto-completion. Or you can also set it programmatically:\n\n```kt\nval items = arrayOf(\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\")\n(textField.editText as? MaterialAutoCompleteTextView)?.setSimpleItems(items)\n```\n\nAlternatively, to have more control over the auto-completion items rendering,\nyou can also provide a custom item adapter by:\n\n```kt\nval items = listOf(\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\")\nval adapter = ArrayAdapter(requireContext(), R.layout.list_item, items)\n(textField.editText as? AutoCompleteTextView)?.setAdapter(adapter)\n```\n\nAnd a custom item layout (`list_item.xml`):\n\n```xml\n<TextView\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:padding=\"16dp\"\n    android:ellipsize=\"end\"\n    android:maxLines=\"1\"\n    android:textAppearance=\"?attr/textAppearanceTitleMedium\"\n/>\n```\n\n### Adding helper text to a text field\n\n<mio-image index=6></mio-image>\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:helperTextEnabled=\"true\"\n    app:helperText=\"@string/helper_text\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n### Adding a counter to a text field\n\n<mio-image index=7></mio-image>\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:counterEnabled=\"true\"\n    app:counterMaxLength=\"20\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n### Adding errors to a text field\n\n<mio-image index=8></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:errorEnabled=\"true\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\nIn code:\n\n```kt\n// Set error text\npasswordLayout.error = getString(R.string.error)\n\n// Clear error text\npasswordLayout.error = null\n```\n\n**Note:** Non-null error text will replace any existing helper text, and\nnon-null helper text will replace any existing error text.\n\n### Adding a prefix/suffix to a text field\n\n<mio-image index=9></mio-image>\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    app:prefixText=\"@string/prefix\"\n    app:suffixText=\"@string/suffix\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n### Text field dimensions\n\nThe recommended default `android:layout_width` is `245dp`.\n\nBy default, text fields have a maximum width of `488dp`, and a minimum width of\n`56dp` for layouts without a label. If a label is present, the minimum width\nrecommended is `88dp`. `android:minWidth` and `android:maxWidth` (as well as\n`android:minEms` and `android:maxEms`) should be set on the `TextInputLayout`\ninstead of on the `TextInputEditText` to avoid unintended behaviors.\n\nYou can override those values in a custom style that inherits from a\n`TextInputLayout` style or by making changes directly on the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    android:id=\"@+id/textField\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:minWidth=\"@dimen/custom_min_width\"\n    android:maxWidth=\"@dimen/custom_max_width\"\n    android:hint=\"@string/label\">\n\n    <com.google.android.material.textfield.TextInputEditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n**Note:** The `android:layout_width` of the `TextInputLayout` should be\n`wrap_content` in order for those minimum and maximum dimensions to be used.\n\n### Using text fields programmatically\n\nIf you construct the `TextInputEditText` child of a `TextInputLayout`\nprogrammatically, you should use `TextInputLayout`'s context to create the view.\nThis will allow `TextInputLayout` to pass along the appropriate styling to the\nedit text.\n\n```kt\nval textInputLayout = TextInputLayout(context)\nval editText = TextInputEditText(textInputLayout.context)\n```\n\n### Types\n\nThere are two types of text fields: 1\\. [Filled text field](#filled-text-field),\n2\\. [Outlined text field](#outlined-text-field)\n\n<mio-image index=10></mio-image>\n\n## Filled text field\n\n[Filled text fields](https://material.io/components/text-fields/#filled-text-field)\nhave more visual emphasis than outlined text fields, making them stand out when\nsurrounded by other content and components.\n\n### Filled text field examples\n\nAPI and source code:\n\n*   `TextInputLayout`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputLayout)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputLayout.java)\n*   `TextInputEditText`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputEditText)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputEditText.java)\n\nThe following example shows a filled text field with a label.\n\n<mio-image index=11></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    style=\"?attr/textInputFilledStyle\"\n    android:id=\"@+id/filledTextField\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"@string/label\">\n\n    <com.google.android.material.textfield.TextInputEditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\nIn code:\n\n```kt\n// Get input text\nval inputText = filledTextField.editText?.text.toString()\n\nfilledTextField.editText?.doOnTextChanged { inputText, _, _, _ ->\n    // Respond to input text change\n}\n```\n\nSee the [using text fields](#using-text-fields) section above for more examples.\n\n### Anatomy and key properties\n\nA filled text field has a filled container, input text, a label, an activation\nindicator, optional helper/error text and optional leading/trailing icons.\n\n<mio-image index=12></mio-image>\n\n1.  Container\n2.  Leading icon\n3.  Label\n4.  Input text\n5.  Trailing icon\n6.  Activation indicator\n7.  Helper/error/counter text\n8.  Prefix/suffix/placeholder (not shown)\n\n**Note:** All the attributes in the tables below should be set on the\n`TextInputLayout`, with the exception of the input text attributes, which should\nbe set on the `TextInputEditText`.\n\n#### Container attributes\n\nElement                | Attribute                | Related method(s)                                                                       | Default value\n---------------------- | ------------------------ | --------------------------------------------------------------------------------------- | -------------\n**Color**              | `app:boxBackgroundColor` | `setBoxBackgroundColor`<br/>`setBoxBackgroundColorResource`<br/>`getBoxBackgroundColor` | `?attr/colorSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_filled_background_color.xml))\n**Shape**              | `app:shapeAppearance`    | N/A                                                                                     | `?attr/shapeAppearanceSmallComponent`\n**Text field enabled** | `android:enabled`        | `setEnabled`                                                                            | `true`\n\n#### Leading icon attributes\n\nElement                 | Attribute                         | Related method(s)                                                     | Default value\n----------------------- | --------------------------------- | --------------------------------------------------------------------- | -------------\n**Icon**                | `app:startIconDrawable`           | `setStartIconDrawable`<br/>`getStartIconDrawable`                     | `null`\n**Content description** | `app:startIconContentDescription` | `setStartIconContentDescription`<br/>`getStartIconContentDescription` | `null`\n**Color**               | `app:startIconTint`               | `setStartIconTintList`                                                | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Checkable**           | `app:startIconCheckable`          | `setStartIconCheckable`<br/>`isStartIconCheckable`                    | `false`\n**Size**                | `app:startIconMinSize`            | `setStartIconMinSize`<br/>`getStartIconMinSize`                       | `48dp`\n**Scale type**          | `app:startIconScaleType`          | `setStartIconScaleType` <br/> `getStartIconScaleType`                 |\n\n`ScaleType.CENTER`\n\n#### Label attributes\n\nElement                        | Attribute                  | Related method(s)                                       | Default value\n------------------------------ | -------------------------- | ------------------------------------------------------- | -------------\n**Text**                       | `android:hint`             | `setHint`<br/>`getHint`                                 | `null`\n**Color**                      | `android:textColorHint`    | `setDefaultHintTextColor`<br/>`getDefaultHintTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_label_color.xml))\n**Collapsed (floating) color** | `app:hintTextColor`        | `setHintTextColor`<br/>`getHintTextColor`               | `?attr/colorPrimary` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_label_color.xml))\n**Typography**                 | `app:hintTextAppearance`   | `setHintTextAppearance`                                 | `?attr/textAppearanceBodySmall`\n**Animation**                  | `app:hintAnimationEnabled` | `setHintAnimationEnabled`<br/>`isHintAnimationEnabled`  | `true`\n**Expanded enabled**           | `app:expandedHintEnabled`  | `setExpandedHintEnabled`<br/>`isExpandedHintEnabled`    | `true`\n\n**Note:** The `android:hint` should always be set on the `TextInputLayout`\ninstead of on the `EditText` in order to avoid unintended behaviors.\n\n#### Input text attributes\n\nElement              | Attribute                                                           | Related method(s)                                            | Default value\n-------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------ | -------------\n**Input text**       | `android:text`                                                      | `setText`<br/>`getText`                                      | `@null`\n**Typography**       | `android:textAppearance`                                            | `setTextAppearance`                                          | `?attr/textAppearanceBodyLarge`\n**Input text color** | `android:textColor`                                                 | `setTextColor`<br/>`getTextColors`<br/>`getCurrentTextColor` | `?attr/colorOnSurface`\n**Cursor color**     | N/A (color comes from the theme attr `?attr/colorControlActivated`) | N/A                                                          | `?attr/colorPrimary`\n\n**Note:** The input text attributes should be set on the `TextInputEditText`.\n\n#### Trailing icon attributes\n\nElement                             | Attribute                       | Related method(s)                                                 | Default value\n----------------------------------- | ------------------------------- | ----------------------------------------------------------------- | -------------\n**Mode**                            | `app:endIconMode`               | `setEndIconMode`<br/>`getEndIconMode`                             | `END_ICON_NONE`\n**Color**                           | `app:endIconTint`               | `setEndIconTintList`                                              | `colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Custom icon**                     | `app:endIconDrawable`           | `setEndIconDrawable`<br/>`getEndIconDrawable`                     | `null`\n**Custom icon content description** | `app:endIconContentDescription` | `setEndIconContentDescription`<br/>`getEndIconContentDescription` | `null`\n**Custom icon checkable**           | `app:endIconCheckable`          | `setEndIconCheckable`<br/>`isEndIconCheckable`                    | `true`\n**Error icon**                      | `app:errorIconDrawable`         | `setErrorIconDrawable`<br/>`getErrorIconDrawable`                 | [`@drawable/mtrl_ic_error`](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/drawable/mtrl_ic_error.xml)\n**Error icon color**                | `app:errorIconTint`             | `setErrorIconTintList`                                            | `?attr/colorError`\n**Size**                            | `app:endIconMinSize`            | `setEndIconMinSize`<br/>`getEndIconMinSize`                       | `48dp`\n**Scale type**                      | `app:endIconScaleType`          | `setEndIconScaleType` <br/> `getEndIconScaleType`                 |\n\n`ScaleType.CENTER`\n\n#### Activation indicator attributes\n\nElement           | Attribute                   | Related method(s)                                                            | Default value\n----------------- | --------------------------- | ---------------------------------------------------------------------------- | -------------\n**Color**         | `app:boxStrokeColor`        | `setBoxStrokeColor`<br/>`setBoxStrokeColorStateList`<br/>`getBoxStrokeColor` | `?attr/colorOutline` and `?attr/colorPrimary` (focused) (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_stroke_color.xml))\n**Error color**   | `app:boxStrokeErrorColor`   | `setBoxStrokeErrorColor`<br/>`getBoxStrokeErrorColor`                        | `?attr/colorError`\n**Width**         | `app:boxStrokeWidth`        | N/A                                                                          | `1dp`\n**Focused width** | `app:boxStrokeWidthFocused` | N/A                                                                          | `2dp`\n\n#### Helper/error/counter text attributes\n\nElement                     | Attribute                                                           | Related method(s)                                                                                                   | Default value\n--------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- | -------------\n**Helper text enabled**     | `app:helperTextEnabled`                                             | `setHelperTextEnabled`<br/>`isHelperTextEnabled`                                                                    | `false`\n**Helper text**             | `app:helperText`                                                    | `setHelperText`<br/>`getHelperText`                                                                                 | `null`\n**Helper text color**       | `app:helperTextColor`                                               | `setHelperTextColor`<br/>`getHelperTextColor`                                                                       | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Helper text typography**  | `app:helperTextAppearance`                                          | `setHelperTextAppearance`                                                                                           | `?attr/textAppearanceBodySmall`\n**Error text enabled**      | `app:errorEnabled`                                                  | `setErrorEnabled`<br/>`isErrorEnabled`                                                                              | `false`\n**Error text**              | N/A                                                                 | `setError`<br/>`getError`                                                                                           | `null`\n**Error text color**        | `app:errorTextColor`                                                | `setErrorTextColor`<br/>`getErrorCurrentTextColors`                                                                 | `?attr/colorError`\n**Error text typography**   | `app:errorTextAppearance`                                           | `setErrorTextAppearance`                                                                                            | `?attr/textAppearanceBodySmall`\n**Counter text enabled**    | `app:counterEnabled`                                                | `setCounterEnabled`<br/>`isCounterEnabled`                                                                          | `false`\n**Counter text length**     | `app:counterMaxLength`                                              | `setCounterMaxLength`<br/>`getCounterMaxLength`                                                                     | `-1`\n**Counter text typography** | `app:counterTextAppearance`<br/>`app:counterOverflowTextAppearance` | `setCounterTextAppearance`<br/>`setCounterOverflowTextAppearance`                                                   | `?attr/textAppearanceBodySmall`\n**Counter text color**      | `app:counterTextColor`<br/>`app:counterOverflowTextColor`           | `setCounterTextColor`<br/>`setCounterOverflowTextColor`<br/>`getCounterTextColor`<br/>`getCounterOverflowTextColor` | `?attr/colorOnSurfaceVariant` (`app:counterTextColor`) (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))<br/>`?attr/colorError` (`app:counterOverflowTextColor`)\n\n#### Prefix/suffix attributes\n\nElement               | Attribute                  | Related method(s)                             | Default value\n--------------------- | -------------------------- | --------------------------------------------- | -------------\n**Prefix**            | `app:prefixText`           | `setPrefixText`<br/>`getPrefixText`           | `null`\n**Prefix color**      | `app:prefixTextColor`      | `setPrefixTextColor`<br/>`getPrefixTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Prefix typography** | `app:prefixTextAppearance` | `setPrefixTextAppearance`                     | `?attr/textAppearanceTitleMedium`\n**Suffix**            | `app:suffixText`           | `setSuffixText`<br/>`getSuffixText`           | `null`\n**Suffix color**      | `app:suffixTextColor`      | `setSuffixTextColor`<br/>`getSuffixTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Suffix typography** | `app:suffixTextAppearance` | `setSuffixTextAppearance`                     | `?attr/textAppearanceTitleMedium`\n\n#### Styles\n\nElement                               | Style                                                                  | Default style theme attribute\n------------------------------------- | ---------------------------------------------------------------------- | -----------------------------\n**Default style**                     | `Widget.Material3.TextInputLayout.FilledBox`                           | `?attr/textInputFilledStyle`\n**Dense style**                       | `Widget.Material3.TextInputLayout.FilledBox.Dense`                     | `?attr/textInputFilledDenseStyle`\n**Exposed dropdown menu style**       | `Widget.Material3.TextInputLayout.FilledBox.ExposedDropdownMenu`       | `?attr/textInputFilledExposedDropdownMenuStyle`\n**Dense exposed dropdown menu style** | `Widget.Material3.TextInputLayout.FilledBox.Dense.ExposedDropdownMenu` | N/A\n\nSee the full list of\n[styles](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/values/styles.xml)\nand\n[attrs](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/values/attrs.xml).\n\n## Outlined text field\n\n[Outlined text fields](https://material.io/components/text-fields/#outlined-text-field)\nhave less visual emphasis than filled text fields. When they appear in forms,\nfor example, where many text fields are placed together, their reduced emphasis\nhelps simplify the layout.\n\n**Note:** The outlined text field is the default style.\n\n### Outlined text field examples\n\nAPI and source code:\n\n*   `TextInputLayout`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputLayout)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputLayout.java)\n*   `TextInputEditText`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputEditText)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputEditText.java)\n\nThe following example shows an outlined text field.\n\n<mio-image index=13></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    android:id=\"@+id/outlinedTextField\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"@string/label\">\n\n    <com.google.android.material.textfield.TextInputEditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n    />\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\nIn code:\n\n```kt\n// Get input text\nval inputText = outlinedTextField.editText?.text.toString()\n\noutlinedTextField.editText?.doOnTextChanged { inputText, _, _, _ ->\n    // Respond to input text change\n}\n```\n\nSee the [using text fields](#using-text-fields) section above for more examples.\n\n### Anatomy and key properties\n\nAn outlined text field has a stroked container, input text, a label, optional\nhelper/error text and optional leading/trailing icons.\n\n<mio-image index=14></mio-image>\n\n1.  Container\n2.  Leading icon\n3.  Label\n4.  Input text\n5.  Trailing icon\n6.  Helper/error/counter text\n7.  Prefix/suffix/placeholder (not shown)\n\n**Note:** All the attributes in the tables below should be set on the\n`TextInputLayout`, with the exception of the input text attributes, which should\nbe set on the `TextInputEditText`.\n\n#### Container attributes\n\nElement                  | Attribute                   | Related method(s)                                                            | Default value\n------------------------ | --------------------------- | ---------------------------------------------------------------------------- | -------------\n**Stroke color**         | `app:boxStrokeColor`        | `setBoxStrokeColor`<br/>`setBoxStrokeColorStateList`<br/>`getBoxStrokeColor` | `?attr/colorOutline` and `?attr/colorPrimary` (focused) (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_stroke_color.xml))\n**Stroke error color**   | `app:boxStrokeErrorColor`   | `setBoxStrokeErrorColor`<br/>`getBoxStrokeErrorColor`                        | `?attr/colorError`\n**Stroke width**         | `app:boxStrokeWidth`        | N/A                                                                          | `1dp`\n**Stroke focused width** | `app:boxStrokeWidthFocused` | N/A                                                                          | `2dp`\n**Shape**                | `app:shapeAppearance`       | N/A                                                                          | `?attr/shapeAppearanceSmallComponent`\n**Text field enabled**   | `android:enabled`           | `setEnabled`                                                                 | `true`\n\n#### Leading icon attributes\n\nElement                 | Attribute                         | Related method(s)                                                     | Default value\n----------------------- | --------------------------------- | --------------------------------------------------------------------- | -------------\n**Icon**                | `app:startIconDrawable`           | `setStartIconDrawable`<br/>`getStartIconDrawable`                     | `null`\n**Content description** | `app:startIconContentDescription` | `setStartIconContentDescription`<br/>`getStartIconContentDescription` | `null`\n**Color**               | `app:startIconTint`               | `setStartIconTintList`                                                | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Checkable**           | `app:startIconCheckable`          | `setStartIconCheckable`<br/>`isStartIconCheckable`                    | `false`\n\n#### Label attributes\n\nElement                        | Attribute                | Related method(s)                                       | Default value\n------------------------------ | ------------------------ | ------------------------------------------------------- | -------------\n**Text**                       | `android:hint`           | `setHint`<br/>`getHint`                                 | `null`\n**Color**                      | `android:textColorHint`  | `setDefaultHintTextColor`<br/>`getDefaultHintTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_label_color.xml))\n**Collapsed (floating) color** | `app:hintTextColor`      | `setHintTextColor`<br/>`getHintTextColor`               | `?attr/colorPrimary`\n**Typography**                 | `app:hintTextAppearance` | `setHintTextAppearance`                                 | `?attr/textAppearanceBodySmall`\n\n**Note:** The `android:hint` should always be set on the `TextInputLayout`\ninstead of on the `EditText` in order to avoid unintended behaviors.\n\n#### Input text attributes\n\nElement              | Attribute                                                           | Related method(s)                                            | Default value\n-------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------ | -------------\n**Input text**       | `android:text`                                                      | `setText`<br/>`getText`                                      | `@null`\n**Typography**       | `android:textAppearance`                                            | `setTextAppearance`                                          | `?attr/textAppearanceBodyLarge`\n**Input text color** | `android:textColor`                                                 | `setTextColor`<br/>`getTextColors`<br/>`getCurrentTextColor` | `?attr/colorOnSurface`\n**Cursor color**     | N/A (color comes from the theme attr `?attr/colorControlActivated`) | N/A                                                          | `?attr/colorPrimary`\n\n**Note:** The input text attributes should be set on the `TextInputEditText`.\n\n#### Trailing icon attributes\n\nElement                             | Attribute                       | Related method(s)                                                 | Default value\n----------------------------------- | ------------------------------- | ----------------------------------------------------------------- | -------------\n**Mode**                            | `app:endIconMode`               | `setEndIconMode`<br/>`getEndIconMode`                             | `END_ICON_NONE`\n**Color**                           | `app:endIconTint`               | `setEndIconTintList`                                              | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Custom icon**                     | `app:endIconDrawable`           | `setEndIconDrawable`<br/>`getEndIconDrawable`                     | `null`\n**Custom icon content description** | `app:endIconContentDescription` | `setEndIconContentDescription`<br/>`getEndIconContentDescription` | `null`\n**Custom icon checkable**           | `app:endIconCheckable`          | `setEndIconCheckable`<br/>`isEndIconCheckable`                    | `true`\n**Error icon**                      | `app:errorIconDrawable`         | `setErrorIconDrawable`<br/>`getErrorIconDrawable`                 | [`@drawable/mtrl_ic_error`](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/drawable/mtrl_ic_error.xml)\n**Error icon color**                | `app:errorIconTint`             | `setErrorIconTintList`                                            | `?attr/colorError`\n\n#### Helper/error/counter text attributes\n\nElement                     | Attribute                                                           | Related method(s)                                                                                                   | Default value\n--------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- | -------------\n**Helper text enabled**     | `app:helperTextEnabled`                                             | `setHelperTextEnabled`<br/>`isHelperTextEnabled`                                                                    | `false`\n**Helper text**             | `app:helperText`                                                    | `setHelperText`<br/>`getHelperText`                                                                                 | `null`\n**Helper text color**       | `app:helperTextColor`                                               | `setHelperTextColor`<br/>`getHelperTextColor`                                                                       | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Helper text typography**  | `app:helperTextAppearance`                                          | `setHelperTextAppearance`                                                                                           | `?attr/textAppearanceBodySmall`\n**Error text enabled**      | `app:errorEnabled`                                                  | `setErrorEnabled`<br/>`isErrorEnabled`                                                                              | `false`\n**Error text**              | N/A                                                                 | `setError`<br/>`getError`                                                                                           | `null`\n**Error text color**        | `app:errorTextColor`                                                | `setErrorTextColor`<br/>`getErrorCurrentTextColors`                                                                 | `?attr/colorError`\n**Error text typography**   | `app:errorTextAppearance`                                           | `setErrorTextAppearance`                                                                                            | `?attr/textAppearanceBodySmall`\n**Counter text enabled**    | `app:counterEnabled`                                                | `setCounterEnabled`<br/>`isCounterEnabled`                                                                          | `false`\n**Counter text length**     | `app:counterMaxLength`                                              | `setCounterMaxLength`<br/>`getCounterMaxLength`                                                                     | `-1`\n**Counter text typography** | `app:counterTextAppearance`<br/>`app:counterOverflowTextAppearance` | `setCounterTextAppearance`<br/>`setCounterOverflowTextAppearance`                                                   | `?attr/textAppearanceBodySmall`\n**Counter text color**      | `app:counterTextColor`<br/>`app:counterOverflowTextColor`           | `setCounterTextColor`<br/>`setCounterOverflowTextColor`<br/>`getCounterTextColor`<br/>`getCounterOverflowTextColor` | `?attr/colorOnSurfaceVariant` (`app:counterTextColor`) (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))<br/>`?attr/colorError` (`app:counterOverflowTextColor`)\n\n#### Prefix/suffix attributes\n\nElement               | Attribute                  | Related method(s)                             | Default value\n--------------------- | -------------------------- | --------------------------------------------- | -------------\n**Prefix**            | `app:prefixText`           | `setPrefixText`<br/>`getPrefixText`           | `null`\n**Prefix color**      | `app:prefixTextColor`      | `setPrefixTextColor`<br/>`getPrefixTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Prefix typography** | `app:prefixTextAppearance` | `setPrefixTextAppearance`                     | `?attr/textAppearanceTitleMedium`\n**Suffix**            | `app:suffixText`           | `setSuffixText`<br/>`getSuffixText`           | `null`\n**Suffix color**      | `app:suffixTextColor`      | `setSuffixTextColor`<br/>`getSuffixTextColor` | `?attr/colorOnSurfaceVariant` (see all [states](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/color/m3_textfield_indicator_text_color.xml))\n**Suffix typography** | `app:suffixTextAppearance` | `setSuffixTextAppearance`                     | `?attr/textAppearanceTitleMedium`\n\n#### Styles\n\nElement                               | Style                                                                    | Default style theme attribute\n------------------------------------- | ------------------------------------------------------------------------ | -----------------------------\n**Default style**                     | `Widget.Material3.TextInputLayout.OutlinedBox`                           | `?attr/textInputStyle` and `?attr/textInputOutlinedStyle`\n**Dense style**                       | `Widget.Material3.TextInputLayout.OutlinedBox.Dense`                     | `?attr/textInputOutlinedDenseStyle`\n**Exposed dropdown menu style**       | `Widget.Material3.TextInputLayout.OutlinedBox.ExposedDropdownMenu`       | `?attr/textInputOutlinedExposedDropdownMenuStyle`\n**Dense exposed dropdown menu style** | `Widget.Material3.TextInputLayout.OutlinedBox.Dense.ExposedDropdownMenu` | N/A\n\nSee the full list of\n[styles](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/values/styles.xml)\nand\n[attrs](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/res/values/attrs.xml).\n\n## Theming text fields\n\nText fields support\n[Material Theming](https://material.io/components/text-fields/#theming) which\nprovides color, typography and shape customization.\n\n### Text field theming example\n\nAPI and source code:\n\n*   `TextInputLayout`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputLayout)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputLayout.java)\n*   `TextInputEditText`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/textfield/TextInputEditText)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/textfield/TextInputEditText.java)\n\nThe following example shows filled and outlined text field types with Material\nTheming.\n\n<mio-image index=15></mio-image>\n\n#### Implementing text field theming\n\nUsing theme attributes and styles in `res/values/styles.xml` adds themes to all\ntext fields and affects other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"colorPrimary\">@color/shrine_pink_100</item>\n    <item name=\"colorOnSurface\">@color/shrine_pink_900</item>\n    <item name=\"colorError\">@color/shrine_red</item>\n    <item name=\"textAppearanceTitleMedium\">@style/TextAppearance.App.TitleMedium</item>\n    <item name=\"textAppearanceBodySmall\">@style/TextAppearance.App.BodySmall</item>\n    <item name=\"shapeAppearanceSmallComponent\">@style/ShapeAppearance.App.SmallComponent</item>\n</style>\n\n<style name=\"TextAppearance.App.TitleMedium\" parent=\"TextAppearance.Material3.TitleMedium\">\n    <item name=\"fontFamily\">@font/rubik</item>\n    <item name=\"android:fontFamily\">@font/rubik</item>\n</style>\n\n<style name=\"TextAppearance.App.BodySmall\" parent=\"TextAppearance.Material3.BodySmall\">\n    <item name=\"fontFamily\">@font/rubik</item>\n    <item name=\"android:fontFamily\">@font/rubik</item>\n</style>\n\n<style name=\"ShapeAppearance.App.SmallComponent\" parent=\"ShapeAppearance.Material3.SmallComponent\">\n    <item name=\"cornerFamily\">cut</item>\n    <item name=\"cornerSize\">4dp</item>\n</style>\n```\n\nUsing default style theme attributes, styles and theme overlays adds themes to\nall text fields but does not affect other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"textInputStyle\">@style/Widget.App.TextInputLayout</item>\n</style>\n\n<style name=\"Widget.App.TextInputLayout\" parent=\"Widget.Material3.TextInputLayout.*\">\n    <item name=\"materialThemeOverlay\">@style/ThemeOverlay.App.TextInputLayout</item>\n    <item name=\"shapeAppearance\">@style/ShapeAppearance.App.SmallComponent</item>\n    <item name=\"hintTextColor\">?attr/colorOnSurface</item>\n</style>\n\n<style name=\"ThemeOverlay.App.TextInputLayout\" parent=\"\">\n    <item name=\"colorPrimary\">@color/shrine_pink_100</item>\n    <item name=\"colorOnSurface\">@color/shrine_pink_900</item>\n    <item name=\"colorError\">@color/shrine_red</item>\n    <item name=\"textAppearanceTitleMedium\">@style/TextAppearance.App.TitleMedium</item>\n    <item name=\"textAppearanceBodySmall\">@style/TextAppearance.App.BodySmall</item>\n    <item name=\"editTextStyle\">@style/Widget.Material3.TextInputEditText.*</item>\n</style>\n```\n\nUsing the style in the layout affects only this text field:\n\n```xml\n<com.google.android.material.textfield.TextInputLayout\n    ...\n    style=\"@style/Widget.App.TextInputLayout\">\n\n    ...\n\n</com.google.android.material.textfield.TextInputLayout>\n```\n\n**Note:** When setting a `materialThemeOverlay` on a custom `TextInputLayout`\nstyle, don't forget to set `editTextStyle` to either a\n`@style/Widget.Material3.TextInputEditText.*` style or to a custom one that\ninherits from that. <br/> The `TextInputLayout` styles set\n`materialThemeOverlay` to override `editTextStyle` with the specific\n`TextInputEditText` style needed. Therefore, you don't need to specify a style\ntag on the edit text.\n",
    "hide_generic_not_available_message": true,
    "is_beta": false
  },
  "component_image_1x1": {},
  "mdc_flutter": {
    "up_next_section": {
      "items": []
    },
    "markdown_path": null,
    "hide_intro_block": true,
    "title": "Text fields",
    "document_id": "6299243597529088",
    "banners": [
      {
        "links": [],
        "title": "Flutter support in progress",
        "description": "<p><span id=\"docs-internal-guid-79a3113f-7fff-677b-0f4f-27160fc6d7d0\"></span></p>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The Flutter team is currently working on Material Design 3 support for <code><a href=\"https://api.flutter.dev/flutter/material/TextField-class.html\" target=\"_blank\" rel=\"noopener\">TextField</a></code></span><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">. Follow the </span><a style=\"text-decoration: none;\" href=\"https://github.com/flutter/flutter/issues/91605\" target=\"_blank\" rel=\"noopener\"><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #1155cc; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; -webkit-text-decoration-skip: none; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\">GitHub issue</span></a><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> and </span><a style=\"text-decoration: none;\" href=\"https://twitter.com/FlutterDev\" target=\"_blank\" rel=\"noopener\"><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #1155cc; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; -webkit-text-decoration-skip: none; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\">@FlutterDev</span></a><span style=\"font-size: 11pt; font-family: Roboto,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> for additional updates.</span></p>"
      }
    ],
    "image": [],
    "meta": {
      "share_image": {},
      "share_title": null,
      "share_description": null,
      "keywords": null
    },
    "markdown_content": null,
    "hide_generic_not_available_message": true,
    "is_beta": false
  },
  "category": "text-input",
  "title": "Text fields",
  "document_id": "5255504477290496",
  "component_image_position": "center",
  "ia_title": "Components / Text fields",
  "dark_component_image_1x1": {},
  "component_image_3x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/e1c648ec7bc6f4e0eb822b707246d331879612fb351b13330d250b69ae8fe5c20c3737aba0ff42d6a14c25241bf3f050e2edbe21acd12b42961cb541fe0f840e",
    "url": "/lh3.googleusercontent.com/1DVKtnoQnQl3IKkrQoW27EkY0aSkMv-qzmcjCMCs9VxVJs2ngdUHJL5OBU99uQ7ENwcVHFOTuH7msZiBsjB_E60gn3UjIx9dyw-qhD73kSpJnEcyzEc0",
    "width": 3360
  },
  "component_image_3x2": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/6c742d3cfc4136dd2db51ffef64198da36fe3e9f244ebe713b16f7d3a727502e56c2b2e7bc3af5f55271e3d3ae5d3651ba0ba3f504377643914acc92e80102ce",
    "url": "/lh3.googleusercontent.com/kViFaeD7CZ1XDMQY4stZt8Ag1DBfAfWH2N2Nr2FJdKxx0yU1jLw9HEUVHnYQyiH9JiSQRy4ZhTPuAvi9D93etfBPNBtbW67ol16ZC4kG91TJlIHit6k",
    "width": 1680
  },
  "jetpack": {},
  "isDisplayed": true,
  "hero": {
    "foreground_image_svg": null,
    "foreground_text_light": false,
    "foreground_image": {
      "height": 1238,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/2eeea20d0f3c5ea623c791d34b0ab710fe911e76951601635b86fc22c7a274cc8da4fb116b9d893cd9d2ec900df46915ca1ffe9dedec69687c51d18c57a8a088",
      "url": "/lh3.googleusercontent.com/WK7H5hODKBgGDqjUzqlGm6LktESRMi1-YaYDhq7untjFg2RUiMqLjRtH46C1ZwBNqadSxa3cX56nwL3Oq9c0HTytnkAVt5OeKtl7kF_qwth1b-AmnOE",
      "width": 584
    },
    "background_image": {
      "height": 667,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/fec3c3bae689768f9da8422cf7e89c56a64d5fd7f702dd1d736fc415a0c9597306e4ab6e3cb60da8b1c2ac1c1e2fbd437495f8bf2f9d0c0769070d3eab2ccabb",
      "url": "/lh3.googleusercontent.com/MtGxqpFYmE8xEdJLq64GI79-tb9Au1NK58_QR0JS94OsOgg1wtj5-Y7gIpNmasYWrG0X8f7WVsvJ7KcNtdplJA2qex2Wk6JsZFykdhRs-2XywDtD-38",
      "width": 1000
    },
    "foreground_image_alignment": "center"
  },
  "mdc_web": {},
  "dark_component_image_3x2": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/87d5ecabc8af425c1b62e26dfc1d2cc74ea8f8419f8b6e15a04d9ee66ebf1657d042d16d074f7a123eb02dc27deae5010b950492e9d0feb5f69bfdaa53691c2e",
    "url": "/lh3.googleusercontent.com/DEH-HaImO5JTvCyBty9-XyIzFLltx_FvZQh5kG5E6tB05aXR-cmeG8SqjCWEqXyp63k2I5Lztyqq56zxOLuXsLm3DekE0sR6_EMdQXM3szphSh7Op8k",
    "width": 1680
  },
  "dark_component_image_3x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/0b32937a5647748bcd80c46dfda56f0521284fd62807a8372cd2225ca980777fabe0c31703283d861f7c60c87093edfaffb5769de8f29f9623986413eb54a338",
    "url": "/lh3.googleusercontent.com/5AKynmXVIIn_DgFRztypB9b1ryop1_zj7S8z7Jp7-7W8s0f2iAA1-JYWM-air5ZimDf91LVAEJjDKtmsxv6wOnPY0G9y8mNMJsZ7PVCJ96IOD_B3UoA",
    "width": 3360
  },
  "dark_component_image_2x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/217e87a5d2faeeef8ff9b36390de4dbc940b607eae26cf8ef32c123d00a4a3e8e92ed406aba7fc7a85e98b1c7730c8abf5ab4b128b9ae2c03a5b5c452257a8bb",
    "url": "/lh3.googleusercontent.com/yiUW2u7ZQwYoKlKosTRZzxBEgiFQ5_fKKGxppnG6s5dOpW2lERHJGXKsM-tPd6yBNESfcgdPALobtEn4Fog6mA1g69TuBOl2jXISDq34xxKmidLIEA",
    "width": 2240
  },
  "metadata": {
    "share_image": {
      "height": 1000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/3d62a2699cd0c4488b4603774563c6d274b107e3b2e7bd45a5598388fb8076e6062a553a8a50c0970f15b11af4cd51930ff9303be16753966af6ad5c5ca2deae",
      "url": "/lh3.googleusercontent.com/UXrECw0uUotOW5gR0ms1wxiWFf5WYEuUalfMeWwun8j4ixIMv62dzn-NwpRHZ7eUCpfwE_HYX1YCHUv75C4gPNtOYVqwuHh5Y6XnCbqAAKmOkaFfnXw",
      "width": 2000
    },
    "share_title": "Text fields \u2013 Material Design 3",
    "share_description": "Text fields allow users to enter text into a UI. They typically appear in forms and dialogs.",
    "keywords": "text field, form, survey, Material, Material Design, Google Material, Google, Material Design 3, Material 3, Material You, Material Design Components, Material Components, components"
  },
  "description": null
}