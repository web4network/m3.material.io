{
  "component_image_2x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/56782f4d06b775bb27677c27aa9c4509d10d43cc3e72880cea3faf9bb6d57cb1ee7d941696dd1cc47c89bb94cf6983bef1c73347809c94c9bebccea5c1a19113",
    "url": "/lh3.googleusercontent.com/1MXZLsVEh2XgeJLkqmFItEVL2ya9RoON46f9zkaQ8g55WG7RwZp8k6xSZ_dzWzBcy4Bkh5BE-r7WB2yOQpMgFvC9Hp2nz3mJlMpurO_joPFSwvJI6m4",
    "width": 2240
  },
  "page_hero": {
    "full_width_content_centered": false,
    "vertical_foreground_alignment_override": null,
    "foreground_image_2x1_dark_mode": {
      "height": 2000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/80d4f416df9f8b240265b570e87af629f57166a4679c5318bbbf5f6c0c0993c0828800f917cafa36dadcffc384e8ebaf3899af184ca49aa723cf39adbd0944a2",
      "url": "/lh3.googleusercontent.com/pq1nVCK-vSkx7BqFbF6JFhvQ0qGpn_BAED1pa5cFk0VsvY-nQ9jujRcObtthLqiOCanr0HGfJswPIb8um74Ob2F7o_zinMWUlalCiY3iV49JzWyY5A",
      "width": 4000
    },
    "foreground_image_1x1_dark_mode": {
      "height": 2240,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/bbb2a1d0e8b27f7f07409b0ef2a42709cf5b5fcc9a6a0ce0d9a18fd385a58767c1d609bade11698f12a4c581734075a55b2ecd1c980f49d21d98e36f0d374fdb",
      "url": "/lh3.googleusercontent.com/ueEZ-NQsRQzWlBmAgQhutfI35LGFPiRa3mEdVHOmolWWYJ4mbY3gF24K64cv0tRb-GV0UypGBzCbi1voayLkKScUs-9R3XByvrF20F1SF1hOWmdWO7Qs",
      "width": 2240
    },
    "main_background_image": {},
    "full_width": false,
    "foreground_image_1x1": {
      "height": 2240,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/8a52dfaf4e5f149a0758bf4a6d96a622b8c5f788caa85783c49ce985ddd606c19af7aa3a1cc9768e362adef13695c30181605f950fdd193fabc5b6331e177fd3",
      "url": "/lh3.googleusercontent.com/Ihjqfw7UpRpRe58raPC412J9pzUA49QuNmzf0vH6f6OiDz19ZWYSVX7j7A8t2pqptldLKuUcYxpO1zJqo4_ouvLPRexaWOB56deFiu3rpYC_R9OzX8s",
      "width": 2240
    },
    "split_background_image": {
      "height": 6927,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/be7b743ffa373801a394865def373806eb6c21de8706e8d351d99d664a6e10f75b622e9192ca93ca6b19a2e04b31782c527a3fa79fb5a816b8b783cf13ea31b3",
      "url": "/lh3.googleusercontent.com/Wf_-9ste5sdHKS1tAt8t93xC2T8NuVsONDKcnDPDDnW2bEWb-7S8hLzcpzcKdZW0Btf-0beb8-dyPCzqc0A74-G93RmgKUErFjTVzsq-iCQa0_gVq3Ye",
      "width": 6927
    },
    "split_background_image_dark_mode": {
      "height": 6927,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/f10cbc0848b0bb35c559e5fbf1cfd4cf26abc3a809d9b00e5a958ebe2ca91993c85c4766d0d8f198ad84c60bf1eae2e34f34e66b4eefae9a73d611425e7d839c",
      "url": "/lh3.googleusercontent.com/hg5j0WGkd_RJeN69IBvPPq-z0BKXj-CVqE6lFGObF6M7ldAgJXGlzX7w88p7PI5t21CXaNFjXCBdovueZ48_k89tmfF8NLMso4d6tjHjYtsOGglNXA",
      "width": 6927
    },
    "foreground_image_2x1": {
      "height": 2000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/6f84aa3274e1e1e339592235ba92b654d063c0d7f8d9a0ebaffc9f9c2698b28ebf5dc0b595d6838765a3fdda10156f58e9bb2fee461e4429346397534e620308",
      "url": "/lh3.googleusercontent.com/QI5VbPlUAT9y8poG7Zw0I7W1J4gxBirEkSKEI7_KS8UYZpPW_KHzlC5e_XOYi-_5-1UyRsrSJVQ9qACuCvsBrQr8YWuRCaQzaPCxNBhqiUWLp8V6Shn-",
      "width": 4000
    },
    "main_background_image_dark_mode": {},
    "horizontal_foreground_alignment_override": null
  },
  "mdc_android": {
    "up_next_section": {
      "items": []
    },
    "markdown_path": "docs/components/Slider.md",
    "hide_intro_block": true,
    "title": "Sliders",
    "document_id": "4537033641033728",
    "banners": [
      {
        "links": [],
        "title": "Jetpack Compose support available.",
        "description": "<p>Sliders are available in the Material Design 3 library for Jetpack Compose. For implementation details, visit the <code>androidx.compose.material3</code> library documentation on Android Developers:</p>\n<ul>\n<li><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary#Slider(kotlin.Float,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Boolean,kotlin.ranges.ClosedFloatingPointRange,kotlin.Int,kotlin.Function0,androidx.compose.foundation.interaction.MutableInteractionSource,androidx.compose.material3.SliderColors)\">Slider API Reference</a></li>\n<li><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary#RangeSlider(kotlin.ranges.ClosedFloatingPointRange,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Boolean,kotlin.ranges.ClosedFloatingPointRange,kotlin.Int,kotlin.Function0,androidx.compose.material3.SliderColors)\">RangeSlider API Reference</a></li>\n</ul>"
      }
    ],
    "image": [
      {
        "file": {
          "height": 532,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/fc6cbe3356bcf1c702982b3d2ad5fa78f69fd22264b21cb1b9c91116c01c086be6f04b01f373876b1615a4ad9fc21246bb0c88e1fc691eb4b31b219b102c3cae",
          "url": "/lh3.googleusercontent.com/xOCssleysjAn7O37w6pcFLljEeVK7jpaZnMO5hG91es6KDDGCUF4hnmHlsxnAewrO2eJmN_kjl1nmxyFjCPoUtFGXIB7gxGWxJTArALPSVMjS8HO95RJ",
          "width": 1064
        },
        "a11y_description": "\"Slider with sound icon buttons on each end.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 293,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/56933e6a500ffb6e6c709fe04775f1e20f49a48129aacdcf922f393fa6310227c1a3de68878492f0ea6d9271706cd36dbff0481b6706e30a9c0aa8fbc7cdfeda",
          "url": "/lh3.googleusercontent.com/UWEVGsmd_lafToar7JEuCwB_Qz7UAViE2UB_QQ0gSd89c25ezFfU5Zz6-J6B3z-ONo9IzVPeE3IwWfFpKzyyE81hqQ-6Q-CBsmanz3OrVeOiSLy7Ksdf",
          "width": 725
        },
        "a11y_description": "2 single point sliders",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 255,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/4becaa374cf1d6f0230becc7e41310fe39254f7a48f1d02af2aa3ef542f508be6192bc57dd74cf9f507c5ca5c0fd21ce9dc4e46cad80eb9bb4426f7867b43ba0",
          "url": "/lh3.googleusercontent.com/S8o0FuevotbhLAeha78E643AZC4qtiRPwvXh85I3Ebve8eG6hgXxzpDfcoENLkSFwWTPdr6LAJ5I_GS7P72CO1es5_47bOOULnhyFv0zHJ3Bl9zRTDc",
          "width": 730
        },
        "a11y_description": "2 range sliders",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 368,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/fcaf4b2fc5aaa6fb3179963083f8e74ee2fbaeb3ad266787efeab649eca3efb1f3399df4d94b001c727a817dc8aacf0b11f12885bceec6ad4e4e1e802e09b0da",
          "url": "/lh3.googleusercontent.com/cun8CyPv-WE2hhaHZ9bemb6zmaFBVTTMYhGiq3ciyyzM1QOx9v0yFpDtTHqNzE7Zr5u-7fIyCg13eEPhb9iEcUJfwqipcs1aiE02khFpqvgXUuznpzw",
          "width": 1180
        },
        "a11y_description": "\"Range slider with range of $0 to $100. Left thumb is set at $20, right thumb\nat $70.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 500,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/0d03d2952dc4bd165fea7c4e1d86eddd18520db9c0a67ed7ed1cf75fe1a7c6351357231ecde119324ce7d5ddd25e3897d13ec3b09fa7001a3c42f2438cb92874",
          "url": "/lh3.googleusercontent.com/mREq-bic0jg7aQ1CCHqoEvQ4FEP3fipzVBaErqKBUr4kuIUXQHKdj1ckIH8he5AsqpW7QkTpem-melKF0ncJ6DXKg_co2ntGo97JG7X7jklVySbiX1Nh",
          "width": 1520
        },
        "a11y_description": "\"Slider examples of both continuous and discrete sliders.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 329,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/31ea6ec5459f67fe76e2583fc71854bce503e4c3f7eab3dc348441e1800466fc7dabb3069d4868a409130086d91c9ad1d52556ad524e4b92bd372a3268d3a936",
          "url": "/lh3.googleusercontent.com/yAQd7l-n65JS7ebRPhDtGrabWxRUgZtWLsQlCkRhb88Y6jZwAlUTT8W4HOJvapCnL8uFltwBmy7hDIYH51_k-lkO1WBKN8T82GtTmYXGCetg1-6yiYS6",
          "width": 1181
        },
        "a11y_description": "\"Continuous sliders with pressed thumb valued at 20.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 319,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/58e60d2e036466f8d04a18a48d336e1ec8189e95f0f8ecddf742b85f89d2383a3bf06e9d3ef468e554e10241647f199e2ab747cbe097f86d559ef1336b74c194",
          "url": "/lh3.googleusercontent.com/gc2facGIZERRC9m5sA_z66-wmwaBdt_fqKeiTQPN8XmAYN7uWbHlcVKz5mR2tEElbnKG9zz2gAFtOOu19qDffyinouI90WZD4cdq2Kv60i58K-X_oEU",
          "width": 1188
        },
        "a11y_description": "\"Continuous range slider with left thumb at 20 and right thumb at 70.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 276,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/3e8ec4f13b942b9210fe3c5f9d77a3f8327b66d1c6e85338c4c1366e1dcb17c1c1de715ee4e4f4140f7c15c373878fb1bfd3b63134cf008c1d66e9872276bd69",
          "url": "/lh3.googleusercontent.com/D6Ri0jmOEYzQBcCHADLpCAeyYrC3tEKFYo9ln6YYHSwG8a25k0Zs8zf3XKLqR02kuwM1nPA5NBqsST7Amt23MoqugsBKyqik7_QBxWW2vlcBXKOzew",
          "width": 1082
        },
        "a11y_description": "\"Discrete single point slider with pressed thumb at a value of 20.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 223,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/def27864205626153234d74436a0d5c4a84e2b0a1f8c1e6cc0b3b5172c4bf4ceab2de3293820e0f2a13683a2e0b25a2bdede0986bdf5342dee9ba8159b85724c",
          "url": "/lh3.googleusercontent.com/PyS-AHUq1eso-orPwJbqC-z7dCv__ElHUCmRQSsYfDPAwbb5vAgbkFk-jHHjEmsechPeKE0YBiat0StsLYVLqbVOOO-Ud99EQWoFhNo8a0vt4CtYeQ",
          "width": 1090
        },
        "a11y_description": "\"Discrete range slider with left thumb at 20 and right thumb at 70.\"",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 500,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/23b9f8bda44d51bcecb11b8e61de029f92b43e2f125546ace7e4c2420dfbf332839fa8d83a7e93ee855427c085698ee1fe6b6d1459e0f1ef497d2aa9d5b8c509",
          "url": "/lh3.googleusercontent.com/fZ4eFR7tIBFdcOKvPkr03StI7lKRWNE9AOov8zbekJhK2dGLru-NCtRnat6R2k1IsC4OQD13EMCjfhhUeHfBN0w3NAZEjTRIEsX3IdO89pSxN2og1EA4",
          "width": 1520
        },
        "a11y_description": "Slider anatomy diagram",
        "bordered": true,
        "case": null,
        "caption": null
      },
      {
        "file": {
          "height": 93,
          "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_293ae6e29e4b420a9648cf846508437a_/3f54c9ad6f5f5ba341cfd13f6713ddc64460d2ee2d4ed8790acf851255d96001c6e2ce2254e2c50000e0e0435475dca07dfa515ae8749ee68600f8df5a8ef028",
          "url": "/lh3.googleusercontent.com/GVdIVNGOk63ievXZqWR2X-bJ5Av8YBHEIwsioMESv1zIgXPo8cQqVvF01qLGijbMmzoEsxI06NlfbBrVNYT6znSRfpEU36Km7c9PAEZjD4AQ-PbiPMIh",
          "width": 400
        },
        "a11y_description": "\"Slider theming example with pink and brown colors.\"",
        "bordered": true,
        "case": null,
        "caption": null
      }
    ],
    "meta": {
      "share_image": null,
      "share_title": null,
      "share_description": null,
      "keywords": null
    },
    "markdown_content": "<!--docs:\ntitle: \"Sliders\"\nlayout: detail\nsection: components\nexcerpt: \"Sliders allow users to make selections from a range of values.\"\niconId: slider\npath: /catalog/sliders/\n-->\n\n# Slider\n\n[Sliders](https://material.io/components/sliders/) allow users to make\nselections from a range of values.\n\n<mio-image index=0></mio-image>\n\n**Contents**\n\n*   [Using sliders](#using-sliders)\n*   [Continuous slider](#continuous-slider)\n*   [Discrete slider](#discrete-slider)\n*   [Theming sliders](#theming-sliders)\n\n## Using sliders\n\nBefore you can use Material sliders, you need to add a dependency to the\nMaterial Components for Android library. For more information, go to the\n[Getting started](/libraries/mdc-android/getting-started)\npage.\n\n### Usage\n\n<mio-image index=1></mio-image>\n\nAdd a `Slider` to a layout:\n\n```xml\n<!-- Continuous slider -->\n<com.google.android.material.slider.Slider\n    ...\n    android:valueFrom=\"0.0\"\n    android:valueTo=\"100.0\"  />\n\n<!-- Discrete slider -->\n<com.google.android.material.slider.Slider\n    ...\n    android:valueFrom=\"0.0\"\n    android:valueTo=\"100.0\"\n    android:stepSize=\"10.0\"  />\n```\n\nObserve changes to a slider:\n\n```kt\nslider.addOnSliderTouchListener(object : Slider.OnSliderTouchListener {\n    override fun onStartTrackingTouch(slider: Slider) {\n        // Responds to when slider's touch event is being started\n    }\n\n    override fun onStopTrackingTouch(slider: Slider) {\n        // Responds to when slider's touch event is being stopped\n    }\n})\n\nslider.addOnChangeListener { slider, value, fromUser ->\n    // Responds to when slider's value is changed\n}\n```\n\n<mio-image index=2></mio-image>\n\nAdd a `RangeSlider` to a layout:\n\n```xml\n<!-- Continuous slider -->\n<com.google.android.material.slider.RangeSlider\n    ...\n    android:valueFrom=\"0.0\"\n    android:valueTo=\"100.0\"\n    app:values=\"@array/initial_slider_values\"  />\n\n<!-- Discrete slider -->\n<com.google.android.material.slider.RangeSlider\n    ...\n    android:valueFrom=\"0.0\"\n    android:valueTo=\"100.0\"\n    app:values=\"@array/initial_slider_values\"\n    android:stepSize=\"10.0\"  />\n```\n\nAnd in `values/arrays.xml`:\n\n```xml\n<resources>\n  <array name=\"initial_slider_values\">\n    <item>20.0</item>\n    <item>70.0</item>\n  </array>\n</resources>\n```\n\nObserve changes to a range slider:\n\n```kt\nrangeSlider.addOnSliderTouchListener(object : RangeSlider.OnSliderTouchListener {\n    override fun onStartTrackingTouch(slider: RangeSlider) {\n        // Responds to when slider's touch event is being started\n    }\n\n    override fun onStopTrackingTouch(slider: RangeSlider) {\n        // Responds to when slider's touch event is being stopped\n    }\n})\n\nrangeSlider.addOnChangeListener { rangeSlider, value, fromUser ->\n    // Responds to when slider's value is changed\n}\n```\n\n### Making sliders accessible\n\nSliders support setting content descriptors for use with screen readers. While\noptional, we strongly encourage their use.\n\nThat can be done in XML via the `android:contentDescription` attribute or\nprogrammatically:\n\n```kt\nslider.contentDescription = contentDescription\n```\n\nIf using a `TextView` to display the value of the slider, you should set\n`android:labelFor` so that screen readers announce that `TextView` refers to the\nslider.\n\n### Adding/removing the value label\n\nBy default, the slider will show a value label above the thumb when it's\nselected. You can change how it's drawn via the `app:labelBehavior` attribute or\n`setLabelBehavior` method.\n\nThe modes of `app:labelBehavior` are:\n\n*   `floating` (default) - draws the label floating above the bounds of this\n    view\n*   `withinBounds` - draws the label floating within the bounds of this view\n*   `gone` - prevents the label from being drawn\n*   `visible` - always draws the label\n\n### Setting a `LabelFormatter`\n\nBy using a `LabelFormatter` you can display the selected value using letters to\nindicate magnitude (e.g.: 1.5K, 3M, 12B). That can be achieved through the\n`setLabelFormatter` method.\n\nThe following example shows a slider for a price range in USD currency.\n\n<mio-image index=3></mio-image>\n\nIn code:\n\n```kt\nrangeSlider.setLabelFormatter { value: Float ->\n    val format = NumberFormat.getCurrencyInstance()\n    format.maximumFractionDigits = 0\n    format.currency = Currency.getInstance(\"USD\")\n    format.format(value.toDouble())\n}\n```\n\n### Types\n\nThere are two types of sliders: 1\\. [Continuous slider](#continuous-slider), 2\\.\n[Discrete slider](#discrete-slider)\n\n<mio-image index=4></mio-image>\n\nA slider with two thumbs is called a range slider.\n\n## Continuous slider\n\nContinuous sliders allow users to make meaningful selections that don\u2019t require\na specific value.\n\nAPI and source code:\n\n*   `Slider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/Slider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/Slider.java)\n\nThe following example shows a continuous slider.\n\n<mio-image index=5></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.slider.Slider\n    android:id=\"@+id/slider\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:contentDescription=\"@string/slider_desc\"\n    android:value=\"20.0\"\n    android:valueFrom=\"0.0\"\n    android:valueTo=\"100.0\" />\n```\n\n### Continuous range slider\n\nAPI and source code:\n\n*   `RangeSlider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/RangeSlider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/RangeSlider.java)\n\nThe following example shows a continuous range slider.\n\n<mio-image index=6></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.slider.RangeSlider\n  android:id=\"@+id/range_slider\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"wrap_content\"\n  android:contentDescription=\"@string/slider_desc\"\n  app:values=\"@array/initial_slider_values\"\n  android:valueFrom=\"0.0\"\n  android:valueTo=\"100.0\" />\n```\n\n## Discrete slider\n\nDiscrete sliders display a numeric value label upon pressing the thumb, which\nallows a user to input an exact value.\n\nAPI and source code:\n\n*   `Slider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/Slider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/Slider.java)\n\nThe following example shows a discrete slider.\n\n<mio-image index=7></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.slider.Slider\n    ...\n    android:stepSize=\"10.0\" />\n```\n\n### Discrete range slider\n\nAPI and source code:\n\n*   `RangeSlider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/RangeSlider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/RangeSlider.java)\n\nThe following example shows a discrete range slider.\n\n<mio-image index=8></mio-image>\n\nIn the layout:\n\n```xml\n<com.google.android.material.slider.RangeSlider\n    ...\n    android:stepSize=\"10.0\"  />\n```\n\n### Anatomy and key properties\n\nA slider has a track, one or two thumbs, and an optional value label. A discrete\nslider also has tick marks.\n\n<mio-image index=9></mio-image>\n\n1.  Track\n2.  Thumb\n3.  Value label (optional)\n4.  Tick mark (discrete sliders)\n\n#### Track attributes\n\nElement                                    | Attribute                | Related method(s)                                         | Default value\n------------------------------------------ | ------------------------ | --------------------------------------------------------- | -------------\n**Min value**                              | `android:valueFrom`      | `setValueFrom`<br/>`getValueFrom`                         | N/A\n**Max value**                              | `android:valueTo`        | `setValueTo`<br/>`getValueTo`                             | N/A\n**Step size (discrete)**                   | `android:stepSize`       | `setStepSize`<br/>`getStepSize`                           | N/A\n**Initial selected value (Slider)**        | `android:value`          | `setValue`<br/>`getValue`                                 | N/A\n**Initial selected values (RangeSlider)**  | `app:values`             | `setValues`<br/>`getValues`                               | N/A\n**Height**                                 | `app:trackHeight`        | `setTrackHeight`<br/>`getTrackHeight`                     | `4dp`\n**Color**                                  | `app:trackColor`         | `setTrackTintList`<br/>`getTrackTintList`                 | `null`\n**Color for track's active part**          | `app:trackColorActive`   | `setTrackActiveTintList`<br/>`getTrackActiveTintList`     | `?attr/colorPrimary`\n**Color for track's inactive part**        | `app:trackColorInactive` | `setTrackInactiveTintList`<br/>`getTrackInactiveTintList` | `?attr/colorSurfaceVariant`\n**Minimum separation for adjacent thumbs** | `app:minSeparation`      | `setMinSeparation`<br/>`getMinSeparation`                 | `0dp`\n\n**Note:** `app:trackColor` takes precedence over `app:trackColorActive` and\n`app:trackColorInative`. It's a shorthand for setting both values to the same\nthing.\n\n#### Thumb attributes\n\nElement          | Attribute              | Related method(s)                                                                 | Default value\n---------------- | ---------------------- | --------------------------------------------------------------------------------- | -------------\n**Color**        | `app:thumbColor`       | `setThumbTintList`<br/>`getThumbTintList`                                         | `?attr/colorPrimary`\n**Radius**       | `app:thumbRadius`      | `setThumbRadiusResource`<br/>`setThumbRadius`<br/>`getThumbRadius`                | `10dp`\n**Elevation**    | `app:thumbElevation`   | `setThumbElevationResource`<br/>`setThumbElevation`<br/>`getThumbElevation`       | `2dp`\n**Halo color**   | `app:haloColor`        | `setHaloTintList`<br/>`getHaloTintList`                                           | `?attr/colorPrimary` at 24%\n**Halo radius**  | `app:haloRadius`       | `setHaloRadiusResource`<br/>`setHaloRadius`<br/>`getHaloRadius`                   | `24dp`\n**Stroke color** | `app:thumbStrokeColor` | `setThumbStrokeColor`<br/>`setThumbStrokeColorResource`<br/>`getThumbStrokeColor` | `null`\n**Stroke width** | `app:thumbStrokeWidth` | `setThumbStrokeWidth`<br/>`setThumbStrokeWidthResource`<br/>`getThumbStrokeWidth` | `0dp`\n\n#### Value label attributes\n\nElement       | Attribute           | Related method(s)                           | Default value\n------------- | ------------------- | ------------------------------------------- | -------------\n**Style**     | `app:labelStyle`    | N/A                                         | `@style/Widget.Material3.Tooltip`\n**Formatter** | N/A                 | `setLabelFormatter`<br/>`hasLabelFormatter` | `null`\n**Behavior**  | `app:labelBehavior` | `setLabelBehavior`<br/>`getLabelBehavior`   | `floating`\n\n**Note:** The value label is a\n[Tooltip](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/tooltip/TooltipDrawable.java).\n\n#### Tick mark attributes\n\nElement                             | Attribute               | Related method(s)                                       | Default value\n----------------------------------- | ----------------------- | ------------------------------------------------------- | -------------\n**Color**                           | `app:tickColor`         | `setTickTintList`<br/>`getTickTintList`                 | `null`\n**Color for track's active part**   | `app:tickColorActive`   | `setTickActiveTintList`<br/>`getTickActiveTintList`     | `?attr/colorSurfaceVariant`\n**Color for track's inactive part** | `app:tickColorInactive` | `setTickInactiveTintList`<br/>`getTickInactiveTintList` | `?attr/colorPrimary`\n**Tick visible**                    | `app:tickVisible`       | `setTickVisible`<br/>`isTickVisible()`                  | `true`\n\n**Note:** `app:tickColor` takes precedence over `app:tickColorActive` and\n`app:tickColorInative`. It's a shorthand for setting both values to the same\nthing.\n\n#### Styles\n\nElement           | Style\n----------------- | -------------------------\n**Default style** | `Widget.Material3.Slider`\n\nDefault style theme attribute: `?attr/sliderStyle`\n\nSee the full list of\n[styles](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/res/values/styles.xml)\nand\n[attributes](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/res/values/attrs.xml).\n\n## Theming sliders\n\nSliders support\n[Material Theming](https://material.io/components/sliders#theming) which can\ncustomize color and typography.\n\n### Slider theming example\n\nAPI and source code:\n\n*   `Slider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/Slider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/Slider.java)\n*   `RangeSlider`\n    *   [Class definition](https://developer.android.com/reference/com/google/android/material/slider/RangeSlider)\n    *   [Class source](https://github.com/material-components/material-components-android/tree/master/lib/java/com/google/android/material/slider/RangeSlider.java)\n\nThe following example shows a range slider with Material Theming.\n\n<mio-image index=10></mio-image>\n\n#### Implementing slider theming\n\nUse theme attributes and styles in `res/values/styles.xml` which applies to all\nsliders and affects other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"colorPrimary\">@color/shrine_pink_100</item>\n    <item name=\"colorOnPrimary\">@color/shrine_pink_900</item>\n    <item name=\"colorOnSurface\">@color/shrine_pink_100</item>\n</style>\n```\n\nUse a default style theme attribute, styles and a theme overlay which applies to\nall sliders but does not affect other components:\n\n```xml\n<style name=\"Theme.App\" parent=\"Theme.Material3.*\">\n    ...\n    <item name=\"sliderStyle\">@style/Widget.App.Slider</item>\n</style>\n\n<style name=\"Widget.App.Slider\" parent=\"Widget.Material3.Slider\">\n    <item name=\"materialThemeOverlay\">@style/ThemeOverlay.App.Slider</item>\n    <item name=\"labelStyle\">@style/Widget.App.Tooltip</item>\n  </style>\n\n<style name=\"ThemeOverlay.App.Slider\" parent=\"\">\n    <item name=\"colorPrimary\">@color/shrine_pink_100</item>\n    <item name=\"colorOnPrimary\">@color/shrine_pink_900</item>\n    <item name=\"colorOnSurface\">@color/shrine_pink_100</item>\n</style>\n\n<style name=\"Widget.App.Tooltip\" parent=\"Widget.Material3.Tooltip\">\n    <item name=\"android:textAppearance\">@style/TextAppearance.App.Tooltip</item>\n    <item name=\"backgroundTint\">@color/shrine_pink_900</item>\n  </style>\n\n<style name=\"TextAppearance.App.Tooltip\" parent=\"TextAppearance.Material3.BodySmall\">\n  <item name=\"android:textColor\">@color/shrine_pink_100</item>\n  <item name=\"fontFamily\">@font/rubik</item>\n  <item name=\"android:fontFamily\">@font/rubik</item>\n</style>\n```\n\nUse the style in the layout, which affects only this specific slider:\n\n```xml\n<com.google.android.material.slider.RangeSlider\n    ...\n    style=\"@style/Widget.App.Slider\"  />\n```\n",
    "hide_generic_not_available_message": true,
    "is_beta": false
  },
  "component_image_1x1": {},
  "mdc_flutter": {
    "up_next_section": {
      "items": []
    },
    "markdown_path": null,
    "hide_intro_block": true,
    "title": "Sliders",
    "document_id": "6194865314594816",
    "banners": [
      {
        "links": [],
        "title": "Flutter support in progress",
        "description": "<p><span style=\"color: #1f1f1f; font-family: 'Google Sans Text', sans-serif; font-size: 16px;\">The Flutter team is currently working on Material Design 3 support for <code>Sliders</code></span><span style=\"color: #1f1f1f; font-family: 'Google Sans Text', sans-serif; font-size: 16px;\">. Follow the&nbsp;</span><a style=\"box-sizing: border-box; margin: 0px; padding: 1px; border: 0px; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-weight: var(--mio-theme-v2-title-m-font-weight); font-stretch: inherit; line-height: var(--mio-theme-v2-title-m-line-height); font-family: 'Google Sans Text', sans-serif; font-size: 16px; vertical-align: baseline; font-variation-settings: 'GRAD' var(--mio-theme-v2-title-m-font-variation-GRAD), 'opsz' var(--mio-theme-v2-title-m-font-variation-opsz); border-radius: 4px;\" href=\"https://github.com/flutter/flutter/issues/91605\" target=\"_blank\" rel=\"noopener\">GitHub issue</a><span style=\"color: #1f1f1f; font-family: 'Google Sans Text', sans-serif; font-size: 16px;\">&nbsp;and&nbsp;</span><a style=\"box-sizing: border-box; margin: 0px; padding: 1px; border: 0px; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-weight: var(--mio-theme-v2-title-m-font-weight); font-stretch: inherit; line-height: var(--mio-theme-v2-title-m-line-height); font-family: 'Google Sans Text', sans-serif; font-size: 16px; vertical-align: baseline; font-variation-settings: 'GRAD' var(--mio-theme-v2-title-m-font-variation-GRAD), 'opsz' var(--mio-theme-v2-title-m-font-variation-opsz); border-radius: 4px;\" href=\"https://twitter.com/FlutterDev\" target=\"_blank\" rel=\"noopener\">@FlutterDev</a><span style=\"color: #1f1f1f; font-family: 'Google Sans Text', sans-serif; font-size: 16px;\"> for additional updates.</span></p>"
      }
    ],
    "image": [],
    "meta": {
      "share_image": {},
      "share_title": null,
      "share_description": null,
      "keywords": null
    },
    "markdown_content": null,
    "hide_generic_not_available_message": true,
    "is_beta": false
  },
  "category": "selection",
  "title": "Sliders",
  "document_id": "5339758096154624",
  "component_image_position": "center",
  "ia_title": "Components / Sliders",
  "dark_component_image_1x1": {},
  "component_image_3x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/fad641b1f5d0775f4681a087c357336a8e180fe031ea3b17a36bda7beeebc17ff86cd6b4f8b6ac3d0127c2a88f8f8aa64808ca198d7c116114f979909d67ca6d",
    "url": "/lh3.googleusercontent.com/_ee7mhMBEwMMSFY_E0DLYGhCEKq2c366k2IGwPzh5mbRfltyVOIfGKjC6RLkrjQwkty0DBgtPGDT5sg6Ln9eE99U54AJlSwMW9JQgwE7QL96IT-r9mPc",
    "width": 3360
  },
  "component_image_3x2": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/ae885c1ca97a795f62859f530e959227094b345f45d653d8b829eb2ec339aae1177f802f85719879f3ce6c1b7b63d6cbfa08228f08932d093d19e682b9c20d8a",
    "url": "/lh3.googleusercontent.com/InpC-xxaAyjw3JngGszxcxhIL8ocVxXLyJKOh45gkQJ6CvHTNL7rdwqPCl642p3kVKFf_TxebuEKlhTKW0aHS_t6sVshYMigTd5BUIszogxMTM58e3E",
    "width": 1680
  },
  "jetpack": {},
  "isDisplayed": true,
  "hero": {
    "foreground_image_svg": null,
    "foreground_text_light": true,
    "foreground_image": {
      "height": 1832,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/121a99bff260b19685444267016a3af60fd0c48f06f34eb594834266ca81d426674ada78ba1b1ad7e6bda4a5ecd602f82f2e9c4f41aabbfa5b01ff2d34be3d80",
      "url": "/lh3.googleusercontent.com/WbH6XyDNV3JuLq18FHBV0PehZd57Bgr-9fT7KtdCQTXiSXn0wViwyL9ZW4qlb-m0A2ow-Gejix1xPwniUk6TjFOjgBQKFqs9TT22bLAk9ZAtRf3jH14",
      "width": 856
    },
    "background_image": {
      "height": 1000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/afdfd135e9c04dbb7a551973ce70ea580e674486080a4c6aeba5a5614f8a3ecdb02eaab1986b697b6258fced396d6efdb4e680f2b82e2c930ac4e8e494c66609",
      "url": "/lh3.googleusercontent.com/3XmsAIqAscnBkYYWUeQc5AKm83Y3mzCrtqXbUWN_ZtFjTw-F3FAMCc-1vkcSGMdiS8-bqI0dbnmaZE52S6qZBehykL41ZIBG5r4ueSW6Tt2spWmPLw4",
      "width": 1000
    },
    "foreground_image_alignment": "center"
  },
  "mdc_web": {},
  "dark_component_image_3x2": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/36c9fb380a7f0e09c73902efc82112708ebe6f51453eec40d3e3607474468b648216cea8c6eb18eb4c5370131a8973cac4fc85509c76fe83dd35c06cad6cb467",
    "url": "/lh3.googleusercontent.com/F6yfT9XD4rnhyDy6vBfYJ78nLhH1Bwy8m97ylsmd6YcRhWQ6EJDoAgAuG5eUSTTMSQUwppgyGmcRxikGiTmi0KUQV9VCrZBxZB3ERbx1WbkAIkWVK6Q",
    "width": 1680
  },
  "dark_component_image_3x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/00e32ed982ec2c454459f93657001aeac642a95e9fb14faea514c184acf74fd64d656e3f15ed68440ec8070cff0345585d98f70d6300173209bd484799f73c1f",
    "url": "/lh3.googleusercontent.com/PSo3k_5L3ZBQFKaIPM6h1iyE6JpqA_XYXHre-vIAhdSJKGDB7g16S1fRdyVE0WV9aft4n5g8FACziBEGftrePWAd99Z8zZxhVBvM1F3ktMLk2h7hEg",
    "width": 3360
  },
  "dark_component_image_2x1": {
    "height": 1120,
    "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/45217f4fd90e492ee1bc1c4adacb8d9a5e11a39ee026d8e82e378ca9752949daeb9a541162b360e5f03b2482e11853cb531bb284da3b37bcf60cf006a2c8e97a",
    "url": "/lh3.googleusercontent.com/ecVrro1djVRWEPOq-omSpcwFcZYEaYEzd1h6V9RDiNnSgNm-x_WUVzXDmSR5_br8nivaU7uW8fetRq13tsS1TKLN5CnIr1JPiuY2N8s3DteVys6YYZY",
    "width": 2240
  },
  "metadata": {
    "share_image": {
      "height": 1000,
      "file_path": "_f68a99ffe9144467a917320028f1ce3b_/_95f9980dd12d4f8886c881994eaa6a79_/c1d4f2c0229072e99e11a8f70084a380e84113bc725682665de273690753ce68ac31e0d0c602984ac9aa436c7590df907d6f3368afb0c51145e0868cc23dfd34",
      "url": "/lh3.googleusercontent.com/jrcW55iJnyuVRwRD5Q8m07q3wGg7Azv6LThpYndPxsnfzP1YBkl9WpzyJP0NEE8TL5PFI821bNvPXJGwwUvaabQUgEb4Q2IE5d6XICPh4GTxxIgM-A",
      "width": 2000
    },
    "share_title": "Sliders \u2013 Material Design 3",
    "share_description": "Sliders allow users to make selections from a range of values.",
    "keywords": "Slider, Sliders, Material, Material Design, Google, Material Design 3, Material 3, Material You, Material Design Components, Material Components, components"
  },
  "description": "Sliders allow users to make selections from a range of values."
}